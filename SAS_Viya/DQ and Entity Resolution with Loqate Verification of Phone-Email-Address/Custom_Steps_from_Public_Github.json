{
  "creationTimeStamp": "2024-12-09T22:25:36.142Z",
  "modifiedTimeStamp": "2024-12-09T22:25:50.909Z",
  "createdBy": "arnold.t",
  "modifiedBy": "arnold.t",
  "links": [
    {
      "method": "GET",
      "rel": "self",
      "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6",
      "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6",
      "type": "application/vnd.sas.transfer.package"
    },
    {
      "method": "GET",
      "rel": "alternate",
      "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6",
      "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6",
      "type": "application/vnd.sas.transfer.package.summary"
    },
    {
      "method": "DELETE",
      "rel": "delete",
      "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6",
      "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6"
    },
    {
      "method": "GET",
      "rel": "objects",
      "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects",
      "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects",
      "type": "application/vnd.sas.collection"
    },
    {
      "method": "GET",
      "rel": "connectors",
      "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors",
      "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors",
      "type": "application/vnd.sas.collection"
    },
    {
      "method": "GET",
      "rel": "mapping",
      "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/mapping",
      "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/mapping",
      "type": "application/vnd.sas.transfer.import.mapping"
    }
  ],
  "version": 1,
  "id": "3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6",
  "name": "Custom Steps from Public Github",
  "description": "",
  "options": {
    "includeDependencies": "true",
    "includeRules": "true"
  },
  "requestedItems": [
    "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e",
    "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03",
    "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a",
    "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab",
    "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443",
    "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690",
    "/files/files/cb511af9-58ca-4519-8db8-405986a36b57",
    "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f",
    "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0",
    "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe",
    "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a",
    "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736",
    "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24",
    "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1",
    "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991",
    "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407"
  ],
  "transferObjectCount": 17,
  "transferDetails": [
    {
      "transferObject": {
        "links": [
          {
            "method": "GET",
            "rel": "self",
            "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/052e1d36-47a4-4800-9b01-ffc7c83114c9",
            "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/052e1d36-47a4-4800-9b01-ffc7c83114c9",
            "type": "application/vnd.sas.transfer.object"
          }
        ],
        "version": 2,
        "id": "052e1d36-47a4-4800-9b01-ffc7c83114c9",
        "summary": {
          "creationTimeStamp": "2022-11-07T17:50:47.158Z",
          "modifiedTimeStamp": "2022-11-07T17:50:47.158Z",
          "createdBy": "arnold.t",
          "modifiedBy": "arnold.t",
          "id": "3763ec22-042d-4e77-889c-739a0c38c991",
          "type": "folder",
          "name": "Custom Steps from Public GitHub",
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991",
              "uri": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991",
              "type": "application/vnd.sas.content.folder"
            },
            {
              "method": "PUT",
              "rel": "update",
              "href": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991",
              "uri": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991",
              "type": "application/vnd.sas.content.folder",
              "responseType": "application/vnd.sas.content.folder"
            },
            {
              "method": "DELETE",
              "rel": "delete",
              "href": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991",
              "uri": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991"
            },
            {
              "method": "DELETE",
              "rel": "deleteRecursively",
              "href": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991?recursive=true",
              "uri": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991?recursive=true"
            },
            {
              "method": "GET",
              "rel": "members",
              "href": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991/members",
              "uri": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991/members",
              "type": "application/vnd.sas.collection",
              "itemType": "application/vnd.sas.content.folder"
            },
            {
              "method": "POST",
              "rel": "addMember",
              "href": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991/members",
              "uri": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991/members",
              "type": "application/vnd.sas.content.folder.member",
              "responseType": "application/vnd.sas.content.folder.member"
            },
            {
              "method": "GET",
              "rel": "up",
              "href": "/folders/folders/4f0d7d0b-57aa-4427-966b-acba048f962a",
              "uri": "/folders/folders/4f0d7d0b-57aa-4427-966b-acba048f962a",
              "type": "application/vnd.sas.content.folder"
            },
            {
              "method": "GET",
              "rel": "ancestors",
              "href": "/folders/ancestors?childUri=/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991",
              "uri": "/folders/ancestors?childUri=/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991",
              "type": "application/vnd.sas.content.folder.ancestor"
            },
            {
              "method": "POST",
              "rel": "createChild",
              "href": "/folders/folders?parentFolderUri=/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991",
              "uri": "/folders/folders?parentFolderUri=/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991",
              "type": "application/vnd.sas.content.folder"
            },
            {
              "method": "PUT",
              "rel": "validateRename",
              "href": "/folders/commons/validations/folders/4f0d7d0b-57aa-4427-966b-acba048f962a/members/f729c531-8802-4d1c-9fe2-d45bd38334dc/name?value={newname}&type=folder",
              "uri": "/folders/commons/validations/folders/4f0d7d0b-57aa-4427-966b-acba048f962a/members/f729c531-8802-4d1c-9fe2-d45bd38334dc/name?value={newname}&type=folder",
              "type": "application/vnd.sas.validation"
            },
            {
              "method": "PUT",
              "rel": "validateNewMemberName",
              "href": "/folders/commons/validations/folders/3763ec22-042d-4e77-889c-739a0c38c991/members/@new/name?value={newname}&type={newtype}",
              "uri": "/folders/commons/validations/folders/3763ec22-042d-4e77-889c-739a0c38c991/members/@new/name?value={newname}&type={newtype}",
              "type": "application/vnd.sas.validation"
            },
            {
              "method": "GET",
              "rel": "transferExport",
              "href": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991",
              "uri": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991",
              "responseType": "application/vnd.sas.transfer.object"
            },
            {
              "method": "PUT",
              "rel": "transferImportUpdate",
              "href": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991",
              "uri": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991",
              "type": "application/vnd.sas.transfer.object",
              "responseType": "application/vnd.sas.summary"
            },
            {
              "method": "POST",
              "rel": "transferImport",
              "href": "/folders/folders",
              "uri": "/folders/folders",
              "type": "application/vnd.sas.transfer.object",
              "responseType": "application/vnd.sas.summary"
            }
          ],
          "version": 2
        },
        "content": "eyJmb2xkZXIiOnsiY3JlYXRpb25UaW1lU3RhbXAiOiIyMDIyLTExLTA3VDE3OjUwOjQ3LjE1ODQ5OFoiLCJjcmVhdGVkQnkiOiJhcm5vbGQudCIsIm1vZGlmaWVkVGltZVN0YW1wIjoiMjAyMi0xMS0wN1QxNzo1MDo0Ny4xNTg0OThaIiwibW9kaWZpZWRCeSI6ImFybm9sZC50IiwidmVyc2lvbiI6MSwiaWQiOiIzNzYzZWMyMi0wNDJkLTRlNzctODg5Yy03MzlhMGMzOGM5OTEiLCJuYW1lIjoiQ3VzdG9tIFN0ZXBzIGZyb20gUHVibGljIEdpdEh1YiIsInBhcmVudEZvbGRlclVyaSI6Ii9mb2xkZXJzL2ZvbGRlcnMvNGYwZDdkMGItNTdhYS00NDI3LTk2NmItYWNiYTA0OGY5NjJhIiwidHlwZSI6ImZvbGRlciIsIm1lbWJlckNvdW50IjoxNSwibGlua3MiOlt7Im1ldGhvZCI6IkdFVCIsInJlbCI6InNlbGYiLCJocmVmIjoiL2ZvbGRlcnMvZm9sZGVycy8zNzYzZWMyMi0wNDJkLTRlNzctODg5Yy03MzlhMGMzOGM5OTEiLCJ1cmkiOiIvZm9sZGVycy9mb2xkZXJzLzM3NjNlYzIyLTA0MmQtNGU3Ny04ODljLTczOWEwYzM4Yzk5MSIsInR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLmNvbnRlbnQuZm9sZGVyIn0seyJtZXRob2QiOiJQVVQiLCJyZWwiOiJ1cGRhdGUiLCJocmVmIjoiL2ZvbGRlcnMvZm9sZGVycy8zNzYzZWMyMi0wNDJkLTRlNzctODg5Yy03MzlhMGMzOGM5OTEiLCJ1cmkiOiIvZm9sZGVycy9mb2xkZXJzLzM3NjNlYzIyLTA0MmQtNGU3Ny04ODljLTczOWEwYzM4Yzk5MSIsInR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLmNvbnRlbnQuZm9sZGVyIiwicmVzcG9uc2VUeXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy5jb250ZW50LmZvbGRlciJ9LHsibWV0aG9kIjoiREVMRVRFIiwicmVsIjoiZGVsZXRlIiwiaHJlZiI6Ii9mb2xkZXJzL2ZvbGRlcnMvMzc2M2VjMjItMDQyZC00ZTc3LTg4OWMtNzM5YTBjMzhjOTkxIiwidXJpIjoiL2ZvbGRlcnMvZm9sZGVycy8zNzYzZWMyMi0wNDJkLTRlNzctODg5Yy03MzlhMGMzOGM5OTEifSx7Im1ldGhvZCI6IkRFTEVURSIsInJlbCI6ImRlbGV0ZVJlY3Vyc2l2ZWx5IiwiaHJlZiI6Ii9mb2xkZXJzL2ZvbGRlcnMvMzc2M2VjMjItMDQyZC00ZTc3LTg4OWMtNzM5YTBjMzhjOTkxP3JlY3Vyc2l2ZT10cnVlIiwidXJpIjoiL2ZvbGRlcnMvZm9sZGVycy8zNzYzZWMyMi0wNDJkLTRlNzctODg5Yy03MzlhMGMzOGM5OTE/cmVjdXJzaXZlPXRydWUifSx7Im1ldGhvZCI6IkdFVCIsInJlbCI6Im1lbWJlcnMiLCJocmVmIjoiL2ZvbGRlcnMvZm9sZGVycy8zNzYzZWMyMi0wNDJkLTRlNzctODg5Yy03MzlhMGMzOGM5OTEvbWVtYmVycyIsInVyaSI6Ii9mb2xkZXJzL2ZvbGRlcnMvMzc2M2VjMjItMDQyZC00ZTc3LTg4OWMtNzM5YTBjMzhjOTkxL21lbWJlcnMiLCJ0eXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy5jb2xsZWN0aW9uIiwiaXRlbVR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLmNvbnRlbnQuZm9sZGVyIn0seyJtZXRob2QiOiJQT1NUIiwicmVsIjoiYWRkTWVtYmVyIiwiaHJlZiI6Ii9mb2xkZXJzL2ZvbGRlcnMvMzc2M2VjMjItMDQyZC00ZTc3LTg4OWMtNzM5YTBjMzhjOTkxL21lbWJlcnMiLCJ1cmkiOiIvZm9sZGVycy9mb2xkZXJzLzM3NjNlYzIyLTA0MmQtNGU3Ny04ODljLTczOWEwYzM4Yzk5MS9tZW1iZXJzIiwidHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMuY29udGVudC5mb2xkZXIubWVtYmVyIiwicmVzcG9uc2VUeXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy5jb250ZW50LmZvbGRlci5tZW1iZXIifSx7Im1ldGhvZCI6IkdFVCIsInJlbCI6InVwIiwiaHJlZiI6Ii9mb2xkZXJzL2ZvbGRlcnMvNGYwZDdkMGItNTdhYS00NDI3LTk2NmItYWNiYTA0OGY5NjJhIiwidXJpIjoiL2ZvbGRlcnMvZm9sZGVycy80ZjBkN2QwYi01N2FhLTQ0MjctOTY2Yi1hY2JhMDQ4Zjk2MmEiLCJ0eXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy5jb250ZW50LmZvbGRlciJ9LHsibWV0aG9kIjoiR0VUIiwicmVsIjoiYW5jZXN0b3JzIiwiaHJlZiI6Ii9mb2xkZXJzL2FuY2VzdG9ycz9jaGlsZFVyaT0vZm9sZGVycy9mb2xkZXJzLzM3NjNlYzIyLTA0MmQtNGU3Ny04ODljLTczOWEwYzM4Yzk5MSIsInVyaSI6Ii9mb2xkZXJzL2FuY2VzdG9ycz9jaGlsZFVyaT0vZm9sZGVycy9mb2xkZXJzLzM3NjNlYzIyLTA0MmQtNGU3Ny04ODljLTczOWEwYzM4Yzk5MSIsInR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLmNvbnRlbnQuZm9sZGVyLmFuY2VzdG9yIn0seyJtZXRob2QiOiJQT1NUIiwicmVsIjoiY3JlYXRlQ2hpbGQiLCJocmVmIjoiL2ZvbGRlcnMvZm9sZGVycz9wYXJlbnRGb2xkZXJVcmk9L2ZvbGRlcnMvZm9sZGVycy8zNzYzZWMyMi0wNDJkLTRlNzctODg5Yy03MzlhMGMzOGM5OTEiLCJ1cmkiOiIvZm9sZGVycy9mb2xkZXJzP3BhcmVudEZvbGRlclVyaT0vZm9sZGVycy9mb2xkZXJzLzM3NjNlYzIyLTA0MmQtNGU3Ny04ODljLTczOWEwYzM4Yzk5MSIsInR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLmNvbnRlbnQuZm9sZGVyIn0seyJtZXRob2QiOiJQVVQiLCJyZWwiOiJ2YWxpZGF0ZVJlbmFtZSIsImhyZWYiOiIvZm9sZGVycy9jb21tb25zL3ZhbGlkYXRpb25zL2ZvbGRlcnMvNGYwZDdkMGItNTdhYS00NDI3LTk2NmItYWNiYTA0OGY5NjJhL21lbWJlcnMvZjcyOWM1MzEtODgwMi00ZDFjLTlmZTItZDQ1YmQzODMzNGRjL25hbWU/dmFsdWU9e25ld25hbWV9XHUwMDI2dHlwZT1mb2xkZXIiLCJ1cmkiOiIvZm9sZGVycy9jb21tb25zL3ZhbGlkYXRpb25zL2ZvbGRlcnMvNGYwZDdkMGItNTdhYS00NDI3LTk2NmItYWNiYTA0OGY5NjJhL21lbWJlcnMvZjcyOWM1MzEtODgwMi00ZDFjLTlmZTItZDQ1YmQzODMzNGRjL25hbWU/dmFsdWU9e25ld25hbWV9XHUwMDI2dHlwZT1mb2xkZXIiLCJ0eXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy52YWxpZGF0aW9uIn0seyJtZXRob2QiOiJQVVQiLCJyZWwiOiJ2YWxpZGF0ZU5ld01lbWJlck5hbWUiLCJocmVmIjoiL2ZvbGRlcnMvY29tbW9ucy92YWxpZGF0aW9ucy9mb2xkZXJzLzM3NjNlYzIyLTA0MmQtNGU3Ny04ODljLTczOWEwYzM4Yzk5MS9tZW1iZXJzL0BuZXcvbmFtZT92YWx1ZT17bmV3bmFtZX1cdTAwMjZ0eXBlPXtuZXd0eXBlfSIsInVyaSI6Ii9mb2xkZXJzL2NvbW1vbnMvdmFsaWRhdGlvbnMvZm9sZGVycy8zNzYzZWMyMi0wNDJkLTRlNzctODg5Yy03MzlhMGMzOGM5OTEvbWVtYmVycy9AbmV3L25hbWU/dmFsdWU9e25ld25hbWV9XHUwMDI2dHlwZT17bmV3dHlwZX0iLCJ0eXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy52YWxpZGF0aW9uIn0seyJtZXRob2QiOiJHRVQiLCJyZWwiOiJ0cmFuc2ZlckV4cG9ydCIsImhyZWYiOiIvZm9sZGVycy9mb2xkZXJzLzM3NjNlYzIyLTA0MmQtNGU3Ny04ODljLTczOWEwYzM4Yzk5MSIsInVyaSI6Ii9mb2xkZXJzL2ZvbGRlcnMvMzc2M2VjMjItMDQyZC00ZTc3LTg4OWMtNzM5YTBjMzhjOTkxIiwicmVzcG9uc2VUeXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy50cmFuc2Zlci5vYmplY3QifSx7Im1ldGhvZCI6IlBVVCIsInJlbCI6InRyYW5zZmVySW1wb3J0VXBkYXRlIiwiaHJlZiI6Ii9mb2xkZXJzL2ZvbGRlcnMvMzc2M2VjMjItMDQyZC00ZTc3LTg4OWMtNzM5YTBjMzhjOTkxIiwidXJpIjoiL2ZvbGRlcnMvZm9sZGVycy8zNzYzZWMyMi0wNDJkLTRlNzctODg5Yy03MzlhMGMzOGM5OTEiLCJ0eXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy50cmFuc2Zlci5vYmplY3QiLCJyZXNwb25zZVR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLnN1bW1hcnkifSx7Im1ldGhvZCI6IlBPU1QiLCJyZWwiOiJ0cmFuc2ZlckltcG9ydCIsImhyZWYiOiIvZm9sZGVycy9mb2xkZXJzIiwidXJpIjoiL2ZvbGRlcnMvZm9sZGVycyIsInR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLnRyYW5zZmVyLm9iamVjdCIsInJlc3BvbnNlVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMuc3VtbWFyeSJ9XX19",
        "state": "enabled",
        "contentSourceLocation": "/Public",
        "connectors": [],
        "substitutions": {}
      },
      "connectors": [
        {
          "id": "d641ded9-a377-4014-ad0e-2885ab877c3c",
          "uri": "/folders/folders/4f0d7d0b-57aa-4427-966b-acba048f962a",
          "relatedUris": [
            "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991"
          ],
          "name": "Public",
          "contentType": "application/vnd.sas.content.folder+json",
          "type": "parentFolder",
          "hints": {},
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/d641ded9-a377-4014-ad0e-2885ab877c3c",
              "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/d641ded9-a377-4014-ad0e-2885ab877c3c",
              "type": "application/vnd.sas.transfer.connector"
            }
          ],
          "forceMapping": false
        }
      ]
    },
    {
      "transferObject": {
        "links": [
          {
            "method": "GET",
            "rel": "self",
            "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/3a0e5d33-f94a-4e7f-9000-474a88083521",
            "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/3a0e5d33-f94a-4e7f-9000-474a88083521",
            "type": "application/vnd.sas.transfer.object"
          }
        ],
        "version": 2,
        "id": "3a0e5d33-f94a-4e7f-9000-474a88083521",
        "summary": {
          "creationTimeStamp": "2023-03-17T16:01:27.643Z",
          "modifiedTimeStamp": "2023-08-25T14:00:28.115Z",
          "createdBy": "simon.s",
          "modifiedBy": "lorne.r",
          "id": "449a664b-3b3a-4c48-a5ec-8b590266da1f",
          "type": "flowStep",
          "name": "SDG - Generate Distribution Comparison.step",
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f",
              "uri": "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f",
              "type": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "GET",
              "rel": "alternate",
              "href": "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f",
              "uri": "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f",
              "type": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "up",
              "href": "/dataFlows/steps",
              "uri": "/dataFlows/steps",
              "type": "application/vnd.sas.collection",
              "itemType": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "PUT",
              "rel": "update",
              "href": "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f",
              "uri": "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f",
              "type": "application/vnd.sas.data.flow.step",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "DELETE",
              "rel": "delete",
              "href": "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f",
              "uri": "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f"
            },
            {
              "method": "POST",
              "rel": "copy",
              "href": "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f/copy",
              "uri": "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f/copy",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "transferExport",
              "href": "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f",
              "uri": "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f",
              "responseType": "application/vnd.sas.transfer.object"
            },
            {
              "method": "PUT",
              "rel": "transferImportUpdate",
              "href": "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f",
              "uri": "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f",
              "type": "application/vnd.sas.transfer.object",
              "responseType": "application/vnd.sas.summary"
            }
          ],
          "version": 2
        },
        "content": "eyJjcmVhdGlvblRpbWVTdGFtcCI6IjIwMjMtMDMtMTdUMTY6MDE6MjcuNjQzODMyWiIsImNyZWF0ZWRCeSI6InNpbW9uLnMiLCJtb2RpZmllZFRpbWVTdGFtcCI6IjIwMjMtMDgtMjVUMTQ6MDA6MjguMTE1ODMxWiIsIm1vZGlmaWVkQnkiOiJsb3JuZS5yIiwiaWQiOiI0NDlhNjY0Yi0zYjNhLTRjNDgtYTVlYy04YjU5MDI2NmRhMWYiLCJuYW1lIjoiU0RHIC0gR2VuZXJhdGUgRGlzdHJpYnV0aW9uIENvbXBhcmlzb24uc3RlcCIsImRpc3BsYXlOYW1lIjoiU0RHIC0gR2VuZXJhdGUgRGlzdHJpYnV0aW9uIENvbXBhcmlzb24uc3RlcCIsImxvY2FsRGlzcGxheU5hbWUiOiJTREcgLSBHZW5lcmF0ZSBEaXN0cmlidXRpb24gQ29tcGFyaXNvbi5zdGVwIiwibGlua3MiOlt7Im1ldGhvZCI6IkdFVCIsInJlbCI6InNlbGYiLCJocmVmIjoiL2RhdGFGbG93cy9zdGVwcy80NDlhNjY0Yi0zYjNhLTRjNDgtYTVlYy04YjU5MDI2NmRhMWYiLCJ1cmkiOiIvZGF0YUZsb3dzL3N0ZXBzLzQ0OWE2NjRiLTNiM2EtNGM0OC1hNWVjLThiNTkwMjY2ZGExZiIsInR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLmRhdGEuZmxvdy5zdGVwLnN1bW1hcnkifSx7Im1ldGhvZCI6IkdFVCIsInJlbCI6ImFsdGVybmF0ZSIsImhyZWYiOiIvZGF0YUZsb3dzL3N0ZXBzLzQ0OWE2NjRiLTNiM2EtNGM0OC1hNWVjLThiNTkwMjY2ZGExZiIsInVyaSI6Ii9kYXRhRmxvd3Mvc3RlcHMvNDQ5YTY2NGItM2IzYS00YzQ4LWE1ZWMtOGI1OTAyNjZkYTFmIiwidHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMuZGF0YS5mbG93LnN0ZXAifSx7Im1ldGhvZCI6IkdFVCIsInJlbCI6InVwIiwiaHJlZiI6Ii9kYXRhRmxvd3Mvc3RlcHMiLCJ1cmkiOiIvZGF0YUZsb3dzL3N0ZXBzIiwidHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMuY29sbGVjdGlvbiIsIml0ZW1UeXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy5kYXRhLmZsb3cuc3RlcC5zdW1tYXJ5In0seyJtZXRob2QiOiJQVVQiLCJyZWwiOiJ1cGRhdGUiLCJocmVmIjoiL2RhdGFGbG93cy9zdGVwcy80NDlhNjY0Yi0zYjNhLTRjNDgtYTVlYy04YjU5MDI2NmRhMWYiLCJ1cmkiOiIvZGF0YUZsb3dzL3N0ZXBzLzQ0OWE2NjRiLTNiM2EtNGM0OC1hNWVjLThiNTkwMjY2ZGExZiIsInR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLmRhdGEuZmxvdy5zdGVwIiwicmVzcG9uc2VUeXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy5kYXRhLmZsb3cuc3RlcCJ9LHsibWV0aG9kIjoiREVMRVRFIiwicmVsIjoiZGVsZXRlIiwiaHJlZiI6Ii9kYXRhRmxvd3Mvc3RlcHMvNDQ5YTY2NGItM2IzYS00YzQ4LWE1ZWMtOGI1OTAyNjZkYTFmIiwidXJpIjoiL2RhdGFGbG93cy9zdGVwcy80NDlhNjY0Yi0zYjNhLTRjNDgtYTVlYy04YjU5MDI2NmRhMWYifSx7Im1ldGhvZCI6IlBPU1QiLCJyZWwiOiJjb3B5IiwiaHJlZiI6Ii9kYXRhRmxvd3Mvc3RlcHMvNDQ5YTY2NGItM2IzYS00YzQ4LWE1ZWMtOGI1OTAyNjZkYTFmL2NvcHkiLCJ1cmkiOiIvZGF0YUZsb3dzL3N0ZXBzLzQ0OWE2NjRiLTNiM2EtNGM0OC1hNWVjLThiNTkwMjY2ZGExZi9jb3B5IiwicmVzcG9uc2VUeXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy5kYXRhLmZsb3cuc3RlcCJ9LHsibWV0aG9kIjoiR0VUIiwicmVsIjoidHJhbnNmZXJFeHBvcnQiLCJocmVmIjoiL2RhdGFGbG93cy9zdGVwcy80NDlhNjY0Yi0zYjNhLTRjNDgtYTVlYy04YjU5MDI2NmRhMWYiLCJ1cmkiOiIvZGF0YUZsb3dzL3N0ZXBzLzQ0OWE2NjRiLTNiM2EtNGM0OC1hNWVjLThiNTkwMjY2ZGExZiIsInJlc3BvbnNlVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMudHJhbnNmZXIub2JqZWN0In0seyJtZXRob2QiOiJQVVQiLCJyZWwiOiJ0cmFuc2ZlckltcG9ydFVwZGF0ZSIsImhyZWYiOiIvZGF0YUZsb3dzL3N0ZXBzLzQ0OWE2NjRiLTNiM2EtNGM0OC1hNWVjLThiNTkwMjY2ZGExZiIsInVyaSI6Ii9kYXRhRmxvd3Mvc3RlcHMvNDQ5YTY2NGItM2IzYS00YzQ4LWE1ZWMtOGI1OTAyNjZkYTFmIiwidHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMudHJhbnNmZXIub2JqZWN0IiwicmVzcG9uc2VUeXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy5zdW1tYXJ5In1dLCJtZXRhZGF0YVZlcnNpb24iOjAsInZlcnNpb24iOjIsInR5cGUiOiJjb2RlIiwiZmxvd01ldGFkYXRhIjp7ImlucHV0UG9ydHMiOlt7Im5hbWUiOiJpbnB1dHRhYmxlMSIsImRpc3BsYXlOYW1lIjoiaW5wdXR0YWJsZTEiLCJsb2NhbERpc3BsYXlOYW1lIjoiaW5wdXR0YWJsZTEiLCJtaW5FbnRyaWVzIjoxLCJtYXhFbnRyaWVzIjoxLCJkZWZhdWx0RW50cmllcyI6MCwidHlwZSI6InRhYmxlIn0seyJuYW1lIjoiaW5wdXR0YWJsZTIiLCJkaXNwbGF5TmFtZSI6ImlucHV0dGFibGUyIiwibG9jYWxEaXNwbGF5TmFtZSI6ImlucHV0dGFibGUyIiwibWluRW50cmllcyI6MSwibWF4RW50cmllcyI6MSwiZGVmYXVsdEVudHJpZXMiOjAsInR5cGUiOiJ0YWJsZSJ9XX0sInVpIjoie1xuXHRcInNob3dQYWdlQ29udGVudE9ubHlcIjogdHJ1ZSxcblx0XCJwYWdlc1wiOiBbXG5cdFx0e1xuXHRcdFx0XCJpZFwiOiBcInBhZ2UxXCIsXG5cdFx0XHRcInR5cGVcIjogXCJwYWdlXCIsXG5cdFx0XHRcImxhYmVsXCI6IFwiUGFyYW1ldGVyc1wiLFxuXHRcdFx0XCJjaGlsZHJlblwiOiBbXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRcImlkXCI6IFwiaW5wdXR0YWJsZTFcIixcblx0XHRcdFx0XHRcInR5cGVcIjogXCJpbnB1dHRhYmxlXCIsXG5cdFx0XHRcdFx0XCJsYWJlbFwiOiBcIlRyYWluIERhdGFcIixcblx0XHRcdFx0XHRcInJlcXVpcmVkXCI6IHRydWUsXG5cdFx0XHRcdFx0XCJwbGFjZWhvbGRlclwiOiBcIlwiLFxuXHRcdFx0XHRcdFwidmlzaWJsZVwiOiBcIlwiXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRcImlkXCI6IFwiaW5wdXR0YWJsZTJcIixcblx0XHRcdFx0XHRcInR5cGVcIjogXCJpbnB1dHRhYmxlXCIsXG5cdFx0XHRcdFx0XCJsYWJlbFwiOiBcIlN5bnRoZXRpYyBEYXRhXCIsXG5cdFx0XHRcdFx0XCJyZXF1aXJlZFwiOiB0cnVlLFxuXHRcdFx0XHRcdFwicGxhY2Vob2xkZXJcIjogXCJcIixcblx0XHRcdFx0XHRcInZpc2libGVcIjogXCJcIlxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0XCJpZFwiOiBcImNvbHVtbnNlbGVjdG9yMVwiLFxuXHRcdFx0XHRcdFwidHlwZVwiOiBcImNvbHVtbnNlbGVjdG9yXCIsXG5cdFx0XHRcdFx0XCJsYWJlbFwiOiBcIlNlbGVjdCB0aGUgY29sdW1ucyB3aGljaCB5b3Ugd291bGQgbGlrZSB0byBjb21wYXJlXCIsXG5cdFx0XHRcdFx0XCJvcmRlclwiOiBmYWxzZSxcblx0XHRcdFx0XHRcImNvbHVtbnR5cGVcIjogXCJuXCIsXG5cdFx0XHRcdFx0XCJtYXhcIjogbnVsbCxcblx0XHRcdFx0XHRcIm1pblwiOiBudWxsLFxuXHRcdFx0XHRcdFwidmlzaWJsZVwiOiBcIlwiLFxuXHRcdFx0XHRcdFwidGFibGVcIjogXCJpbnB1dHRhYmxlMlwiXG5cdFx0XHRcdH1cblx0XHRcdF1cblx0XHR9LFxuXHRcdHtcblx0XHRcdFwiaWRcIjogXCJwYWdlMlwiLFxuXHRcdFx0XCJ0eXBlXCI6IFwicGFnZVwiLFxuXHRcdFx0XCJsYWJlbFwiOiBcIkFib3V0XCIsXG5cdFx0XHRcImNoaWxkcmVuXCI6IFtcblx0XHRcdFx0e1xuXHRcdFx0XHRcdFwiaWRcIjogXCJ0ZXh0X2Rlc2NyaXB0aW9uXCIsXG5cdFx0XHRcdFx0XCJ0eXBlXCI6IFwidGV4dFwiLFxuXHRcdFx0XHRcdFwidGV4dFwiOiBcIkdlbmVyYXRlIERpc3RyaWJ1dGlvbiBDb21wYXJpc29uXFxuXFxuVGhlIFxcXCJHZW5lcmF0ZSBEaXN0cmlidXRpb24gQ29tcGFyaXNvblxcXCIgY3VzdG9tIHN0ZXAgZ2VuZXJhdGVzIGEgaGlzdG9ncmFtIGNvbXBhcmluZyB0aGUgZGlzdHJpYnV0aW9uIG9mIG9yaWdpbmFsIGFuZCBzeW50aGV0aWMgZGF0YSBzbyB0aGF0IHVzZXJzIGNhbiB1bmRlcnN0YW5kIGlmIHRoZWlyIHN5bnRoZXRpYyBkYXRhIGlzIGFuIGFkZXF1YXRlbHkgc2ltaWxhciByZXByZXNlbnRhdGlvbiBvZiB0aGUgb3JpZ2luYWwuIFRoaXMgc3RlcCByZXN1bHRzIGluIGEgY2hhcnQgcHJpbnRlZCBpbiB0aGUgUmVzdWx0cyBUYWIsIGFjY2Vzc2libGUgZnJvbSB0aGUgU3VibWlzc2lvbiB3aW5kb3cuICBJdCBhbHNvIGNyZWF0ZXMgYW5kIGxvYWRzIGFuIGluLW1lbW9yeSB0YWJsZSB3aGljaCBpcyBhdmFpbGFibGUgZm9yIHJlcG9ydGluZyBpbiBWaXN1YWwgQW5hbHl0aWNzLiAgXFxuXFxuV2hpbGUgdGhlIHB1cnBvc2Ugb2YgdGhpcyBjdXN0b20gc3RlcCBpcyB0byBhc3Npc3QgaW4gc3ludGhldGljIGRhdGEgZ2VuZXJhdGlvbiwgdXNlcnMgbWF5IGNob29zZSB0byByZXB1cnBvc2UgdGhlIHNhbWUgdG8gY29tcGFyZSB0aGUgZGlzdHJpYnV0aW9uIG9mIGFueSB0d28gdGFibGVzIHdpdGggdGhlIHNhbWUgdmFyaWFibGVzLiAgSnVzdCBlbnN1cmUgdGhhdCB0aGUgZGF0YXNldCBwcm92aWRlZCB0byB0aGUgU3ludGhldGljIERhdGEgaW5wdXQgcG9ydCBoYXMgYSBUUkFJTkZMQUcgc2V0IHRvIDEuIFxcblxcbklucHV0IHBhcmFtZXRlcnMgZm9yIHRoaXMgY3VzdG9tIHN0ZXAgYXJlIDogXFxuXFxuMS4gQXR0YWNoIGEgdGFibGUgY29udGFpbmluZyB0aGUgb3JpZ2luYWwgdHJhaW5pbmcgZGF0YSB0byB0aGUgVHJhaW5pbmcgRGF0YSBpbnB1dCBwb3J0LlxcbjIuIEF0dGFjaCBhIHRhYmxlIGNvbnRhaW5pbmcgdGhlIHN5bnRoZXRpYyBkYXRhIHRvIHRoZSBTeW50aGV0aWMgRGF0YSBpbnB1dCBwb3J0XFxuMy4gU2VsZWN0IHRoZSBjb2x1bW5zIHlvdSB3aXNoIHRvIGdlbmVyYXRlIGRpc3RyaWJ1dGlvbnMgZm9yLlxcblxcblRoZXJlIGFyZSBubyBleHBsaWNpdCBvdXRwdXQgZGF0YXNldHMgY3JlYXRlZCB3aGljaCBhcmUgaW50ZW5kZWQgdG8gYmUgdXNlZCBmdXJ0aGVyIGluIHRoZSBmbG93LiAgSG93ZXZlciwgIHlvdSdsbCBub3RpY2UgdGhhdCB5b3VyIENBU1VTRVIgY2FzbGliIHdpbGwgbm93IGNvbnRhaW4gYSB0YWJsZSAoc3luX2NvbXBhcmVfbWVyZ2VkX2RhdGEpICB3aGljaCBpcyBhbHNvIGxvYWRlZCB0byBtZW1vcnkuICBZb3UgbWF5IGNob29zZSB0byB2aXN1YWxpemUgdGhpcyB1c2luZyBTQVMgVmlzdWFsIEFuYWx5dGljcy5cXG5cXG5DcmVhdGVkIC8gY29udGFjdCA6IEJyZXR0IFd1amVrIChicmV0dC53dWpla0BzYXMuY29tKSwgIFJlemEgTmF6YXJpIChyZXphLm5hemFyaUBzYXMuY29tKSAsIFJ1aXdlbiBaaGFuZyAocnVpd2VuLnpoYW5nQHNhcy5jb20pIGFuZCBTdW5kYXJlc2ggU2Fua2FyYW4gKHN1bmRhcmVzaC5zYW5rYXJhbkBzYXMuY29tKSBcXG5cXG5WZXJzaW9uIDogMS4wLiAgICgwNk9DVDIwMjIpXCIsXG5cdFx0XHRcdFx0XCJ2aXNpYmxlXCI6IFwiXCJcblx0XHRcdFx0fVxuXHRcdFx0XVxuXHRcdH1cblx0XSxcblx0XCJzeW50YXh2ZXJzaW9uXCI6IFwiMS4zLjBcIixcblx0XCJ2YWx1ZXNcIjoge1xuXHRcdFwiaW5wdXR0YWJsZTFcIjoge1xuXHRcdFx0XCJsaWJyYXJ5XCI6IFwiXCIsXG5cdFx0XHRcInRhYmxlXCI6IFwiXCJcblx0XHR9LFxuXHRcdFwiaW5wdXR0YWJsZTJcIjoge1xuXHRcdFx0XCJsaWJyYXJ5XCI6IFwiXCIsXG5cdFx0XHRcInRhYmxlXCI6IFwiXCJcblx0XHR9LFxuXHRcdFwiY29sdW1uc2VsZWN0b3IxXCI6IFtdXG5cdH1cbn0iLCJsb2NhbFVpIjoie1wicGFnZXNcIjpbe1wiY2hpbGRyZW5cIjpbe1wiaWRcIjpcImlucHV0dGFibGUxXCIsXCJsYWJlbFwiOlwiVHJhaW4gRGF0YVwiLFwicGxhY2Vob2xkZXJcIjpcIlwiLFwicmVxdWlyZWRcIjp0cnVlLFwidHlwZVwiOlwiaW5wdXR0YWJsZVwiLFwidmlzaWJsZVwiOlwiXCJ9LHtcImlkXCI6XCJpbnB1dHRhYmxlMlwiLFwibGFiZWxcIjpcIlN5bnRoZXRpYyBEYXRhXCIsXCJwbGFjZWhvbGRlclwiOlwiXCIsXCJyZXF1aXJlZFwiOnRydWUsXCJ0eXBlXCI6XCJpbnB1dHRhYmxlXCIsXCJ2aXNpYmxlXCI6XCJcIn0se1wiY29sdW1udHlwZVwiOlwiblwiLFwiaWRcIjpcImNvbHVtbnNlbGVjdG9yMVwiLFwibGFiZWxcIjpcIlNlbGVjdCB0aGUgY29sdW1ucyB3aGljaCB5b3Ugd291bGQgbGlrZSB0byBjb21wYXJlXCIsXCJtYXhcIjpudWxsLFwibWluXCI6bnVsbCxcIm9yZGVyXCI6ZmFsc2UsXCJ0YWJsZVwiOlwiaW5wdXR0YWJsZTJcIixcInR5cGVcIjpcImNvbHVtbnNlbGVjdG9yXCIsXCJ2aXNpYmxlXCI6XCJcIn1dLFwiaWRcIjpcInBhZ2UxXCIsXCJsYWJlbFwiOlwiUGFyYW1ldGVyc1wiLFwidHlwZVwiOlwicGFnZVwifSx7XCJjaGlsZHJlblwiOlt7XCJpZFwiOlwidGV4dF9kZXNjcmlwdGlvblwiLFwidGV4dFwiOlwiR2VuZXJhdGUgRGlzdHJpYnV0aW9uIENvbXBhcmlzb25cXG5cXG5UaGUgXFxcIkdlbmVyYXRlIERpc3RyaWJ1dGlvbiBDb21wYXJpc29uXFxcIiBjdXN0b20gc3RlcCBnZW5lcmF0ZXMgYSBoaXN0b2dyYW0gY29tcGFyaW5nIHRoZSBkaXN0cmlidXRpb24gb2Ygb3JpZ2luYWwgYW5kIHN5bnRoZXRpYyBkYXRhIHNvIHRoYXQgdXNlcnMgY2FuIHVuZGVyc3RhbmQgaWYgdGhlaXIgc3ludGhldGljIGRhdGEgaXMgYW4gYWRlcXVhdGVseSBzaW1pbGFyIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBvcmlnaW5hbC4gVGhpcyBzdGVwIHJlc3VsdHMgaW4gYSBjaGFydCBwcmludGVkIGluIHRoZSBSZXN1bHRzIFRhYiwgYWNjZXNzaWJsZSBmcm9tIHRoZSBTdWJtaXNzaW9uIHdpbmRvdy4gIEl0IGFsc28gY3JlYXRlcyBhbmQgbG9hZHMgYW4gaW4tbWVtb3J5IHRhYmxlIHdoaWNoIGlzIGF2YWlsYWJsZSBmb3IgcmVwb3J0aW5nIGluIFZpc3VhbCBBbmFseXRpY3MuICBcXG5cXG5XaGlsZSB0aGUgcHVycG9zZSBvZiB0aGlzIGN1c3RvbSBzdGVwIGlzIHRvIGFzc2lzdCBpbiBzeW50aGV0aWMgZGF0YSBnZW5lcmF0aW9uLCB1c2VycyBtYXkgY2hvb3NlIHRvIHJlcHVycG9zZSB0aGUgc2FtZSB0byBjb21wYXJlIHRoZSBkaXN0cmlidXRpb24gb2YgYW55IHR3byB0YWJsZXMgd2l0aCB0aGUgc2FtZSB2YXJpYWJsZXMuICBKdXN0IGVuc3VyZSB0aGF0IHRoZSBkYXRhc2V0IHByb3ZpZGVkIHRvIHRoZSBTeW50aGV0aWMgRGF0YSBpbnB1dCBwb3J0IGhhcyBhIFRSQUlORkxBRyBzZXQgdG8gMS4gXFxuXFxuSW5wdXQgcGFyYW1ldGVycyBmb3IgdGhpcyBjdXN0b20gc3RlcCBhcmUgOiBcXG5cXG4xLiBBdHRhY2ggYSB0YWJsZSBjb250YWluaW5nIHRoZSBvcmlnaW5hbCB0cmFpbmluZyBkYXRhIHRvIHRoZSBUcmFpbmluZyBEYXRhIGlucHV0IHBvcnQuXFxuMi4gQXR0YWNoIGEgdGFibGUgY29udGFpbmluZyB0aGUgc3ludGhldGljIGRhdGEgdG8gdGhlIFN5bnRoZXRpYyBEYXRhIGlucHV0IHBvcnRcXG4zLiBTZWxlY3QgdGhlIGNvbHVtbnMgeW91IHdpc2ggdG8gZ2VuZXJhdGUgZGlzdHJpYnV0aW9ucyBmb3IuXFxuXFxuVGhlcmUgYXJlIG5vIGV4cGxpY2l0IG91dHB1dCBkYXRhc2V0cyBjcmVhdGVkIHdoaWNoIGFyZSBpbnRlbmRlZCB0byBiZSB1c2VkIGZ1cnRoZXIgaW4gdGhlIGZsb3cuICBIb3dldmVyLCAgeW91J2xsIG5vdGljZSB0aGF0IHlvdXIgQ0FTVVNFUiBjYXNsaWIgd2lsbCBub3cgY29udGFpbiBhIHRhYmxlIChzeW5fY29tcGFyZV9tZXJnZWRfZGF0YSkgIHdoaWNoIGlzIGFsc28gbG9hZGVkIHRvIG1lbW9yeS4gIFlvdSBtYXkgY2hvb3NlIHRvIHZpc3VhbGl6ZSB0aGlzIHVzaW5nIFNBUyBWaXN1YWwgQW5hbHl0aWNzLlxcblxcbkNyZWF0ZWQgLyBjb250YWN0IDogQnJldHQgV3VqZWsgKGJyZXR0Lnd1amVrQHNhcy5jb20pLCAgUmV6YSBOYXphcmkgKHJlemEubmF6YXJpQHNhcy5jb20pICwgUnVpd2VuIFpoYW5nIChydWl3ZW4uemhhbmdAc2FzLmNvbSkgYW5kIFN1bmRhcmVzaCBTYW5rYXJhbiAoc3VuZGFyZXNoLnNhbmthcmFuQHNhcy5jb20pIFxcblxcblZlcnNpb24gOiAxLjAuICAgKDA2T0NUMjAyMilcIixcInR5cGVcIjpcInRleHRcIixcInZpc2libGVcIjpcIlwifV0sXCJpZFwiOlwicGFnZTJcIixcImxhYmVsXCI6XCJBYm91dFwiLFwidHlwZVwiOlwicGFnZVwifV0sXCJzaG93UGFnZUNvbnRlbnRPbmx5XCI6dHJ1ZSxcInN5bnRheHZlcnNpb25cIjpcIjEuMy4wXCIsXCJ2YWx1ZXNcIjp7XCJjb2x1bW5zZWxlY3RvcjFcIjpbXSxcImlucHV0dGFibGUxXCI6e1wibGlicmFyeVwiOlwiXCIsXCJ0YWJsZVwiOlwiXCJ9LFwiaW5wdXR0YWJsZTJcIjp7XCJsaWJyYXJ5XCI6XCJcIixcInRhYmxlXCI6XCJcIn19fSIsInRlbXBsYXRlcyI6eyJTQVMiOiJkYXRhIFx1MDAyNmlucHV0dGFibGUyLjtcblx0c2V0IFx1MDAyNmlucHV0dGFibGUyLjtcblx0VFJBSU5GTEFHPTA7XG5ydW47XG5cbmRhdGEgQ0FTVVNFUi5tZXJnZWRfZGF0YTtcblx0bGVuZ3RoIFN5bnRoZXRpY19kYXRhX2ZsYWcgdmFyY2hhcigqKTtcblx0c2V0IFx1MDAyNmlucHV0dGFibGUxLiBcdTAwMjZpbnB1dHRhYmxlMi47XG5cdElmIFRSQUlORkxBRz0wIHRoZW4gU3ludGhldGljX2RhdGFfZmxhZz1cIkdlbmVyYXRlZCBEYXRhXCI7IGVsc2UgU3ludGhldGljX2RhdGFfZmxhZz1cIk9yaWdpbmFsIERhdGFcIjtcbnJ1bjtcblxuJXB1dCBfYWxsXztcblxuJWxldCBibGFua1NlcGFyYXRlZExpc3QgPSAlX2Zsd19nZXRfY29sdW1uX2xpc3QoX2Zsd19wcmVmaXg9Y29sdW1uc2VsZWN0b3IxKTtcbiVsZXQgY29tbWFTZXBhcmF0ZWRMaXN0ID0gJV9mbHdfZ2V0X2NvbHVtbl9saXN0KF9mbHdfcHJlZml4PWNvbHVtbnNlbGVjdG9yMSwgX2RlbGltPSVzdHIoLCkpO1xuXG5kYXRhIF9udWxsXztcblx0Y2FsbCBzeW1wdXQoXCJjb21tYVNlcGFyYXRlZExpc3RcIiwnXCInfHx0cmFud3JkKFwiXHUwMDI2Y29tbWFTZXBhcmF0ZWRMaXN0LlwiLFwiLFwiLCdcIixcIicpfHwnXCInKTtcbnJ1bjtcblxuJXB1dCBcdTAwMjZjb21tYVNlcGFyYXRlZExpc3QuO1xuXG4lZ2xvYmFsIHZhcm5hbWU7XG5cbiVtYWNybyBnZW5EaXN0UGxvdDtcblxuXHQlZG8gaT0xICV0byAlc3lzZnVuYyhjb3VudHcoXHUwMDI2YmxhbmtTZXBhcmF0ZWRMaXN0LikpO1xuXHRcblx0XHRkYXRhIF9udWxsXztcblx0XHRjYWxsIHN5bXB1dChcInZhcm5hbWVcIixzY2FuKFwiXHUwMDI2YmxhbmtTZXBhcmF0ZWRMaXN0LlwiLCBcdTAwMjZpLiwgXCIgXCIsXCJNT1wiKSk7XG5cdFx0cnVuO1xuXHRcblx0cHJvYyBzZ3Bsb3QgZGF0YT1DQVNVU0VSLm1lcmdlZF9kYXRhIG5vYXV0b2xlZ2VuZDtcblx0IHRpdGxlIFwiRGlzdHJpYnV0aW9uIG9mIFx1MDAyNnZhcm5hbWUuXCI7XG5cdCBkZW5zaXR5IFx1MDAyNnZhcm5hbWUuIC8gZ3JvdXA9U3ludGhldGljX2RhdGFfZmxhZztcblx0cnVuO1xuXHRcblx0JWVuZDtcblx0XG4lbWVuZCBnZW5EaXN0UGxvdDtcblxuJWdlbkRpc3RQbG90O1xuXG5cbnByb2MgY2FzO1xuXHR0ZXh0bWFuYWdlbWVudC5nZW5lcmF0ZUlkcyAvXG5cdFx0dGFibGU9e25hbWU9XCJtZXJnZWRfZGF0YVwiLCBjYXNsaWI9XCJDQVNVU0VSXCJ9XG5cdFx0Y2Fzb3V0PXtuYW1lPVwiTUVSR0VEX0RBVEFfSURcIiwgY2FzbGliPVwiQ0FTVVNFUlwiLCByZXBsYWNlPVRydWV9XG5cdFxuXHQ7XG5cdGRhdGFzdGVwLnJ1bkNvZGUgL1xuXHRcdGNvZGU9XCJkYXRhIENBU1VTRVIuTUVSR0VEX0RBVEFfSUQ7IHNldCBDQVNVU0VSLk1FUkdFRF9EQVRBX0lEOyBTeW50aGV0aWNfRGF0YV9NZWFzdXJlX1ZhbHVlPSdWYWx1ZSc7cnVuO1wiO1xuXG5xdWl0O1xuXG5wcm9jIGNhcztcblx0dHJhbnNwb3NlLnRyYW5zcG9zZSAvICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblx0ICAgdGFibGU9e25hbWU9XCJNRVJHRURfREFUQV9JRFwiLCBjYXNsaWI9XCJDQVNVU0VSXCIsIGdyb3VwYnk9e1wiX2lkX1wiLFwiU3ludGhldGljX2RhdGFfZmxhZ1wifX0gICAgICAgICAgICAgICAgICAgICAvKjEqL1xuXHQgICB0cmFuc3Bvc2U9e1x1MDAyNmNvbW1hU2VwYXJhdGVkTGlzdC59ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qMyovXG5cdCAgIGlkPXtcIlN5bnRoZXRpY19EYXRhX01lYXN1cmVfVmFsdWVcIn0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5cdCAgIGNhc091dD17bmFtZT1cInN5bl9jb21wYXJlX21lcmdlZF9kYXRhXCIsIGNhc2xpYj1cIlBVQkxJQ1wiLCByZXBsYWNlPXRydWV9ICA7ICAgICAgICAgICAgICAgICAgIC8qNSovXG5cbnF1aXQ7XG5cblxuXG5wcm9jIGNhcztcblx0dGFibGUuc2F2ZSAvIFxuXHRcblx0XHR0YWJsZT0ge25hbWU9XCJzeW5fY29tcGFyZV9tZXJnZWRfZGF0YVwiLCBjYXNsaWI9XCJDQVNVU0VSXCJ9XG5cdFx0bmFtZT1cInN5bl9jb21wYXJlX21lcmdlZF9kYXRhXCJcblx0XHRjYXNsaWI9XCJDQVNVU0VSXCJcblx0XHRyZXBsYWNlPVRydWVcblx0O1xuXHRcblx0dGFibGUudGFibGVFeGlzdHMgIHJlc3VsdD1yYy9cblx0ICAgbmFtZT1cInN5bl9jb21wYXJlX21lcmdlZF9kYXRhXCIsIGNhc2xpYj1cIkNBU1VTRVJcIlxuXHQ7XG5cdHByaW50IHJjO1xuXHRcblx0ZG8gdW50aWwgKHJjLmV4aXN0cz0wKTtcblx0ICAgdGFibGUuZHJvcFRhYmxlIC9cblx0ICAgICAgICAgbmFtZT1cInN5bl9jb21wYXJlX21lcmdlZF9kYXRhXCJcblx0XHRcdCBjYXNsaWI9XCJDQVNVU0VSXCJcblx0ICAgICAgICAgO1xuXHQgICB0YWJsZS50YWJsZUV4aXN0cyAgcmVzdWx0PXJjL1xuXHRcdFx0bmFtZT1cInN5bl9jb21wYXJlX21lcmdlZF9kYXRhXCJcblx0XHRcdGNhc2xpYj1cIkNBU1VTRVJcIlxuXHRcdFx0O1xuXHRwcmludCByYztcblx0ZW5kO1xuXHRcblx0O1xuXHRcblx0dGFibGUubG9hZFRhYmxlIC9cblx0XHRwYXRoPVwic3luX2NvbXBhcmVfbWVyZ2VkX2RhdGEuc2FzaGRhdFwiXG5cdFx0Y2FzbGliPVwiQ0FTVVNFUlwiXG5cdFx0Y2Fzb3V0PXtuYW1lPVwic3luX2NvbXBhcmVfbWVyZ2VkX2RhdGFcIiwgY2FzbGliPVwiQ0FTVVNFUlwiLCByZXBsYWNlPVRydWV9XG5cdFxuXHQ7XG5cdFxuXHQ7XG5cdFx0dGFibGUucHJvbW90ZSAvXG5cdCAgICAgICAgbmFtZT1cInN5bl9jb21wYXJlX21lcmdlZF9kYXRhXCJcblx0ICAgICAgICBjYXNsaWI9XCJDQVNVU0VSXCJcblx0ICAgICAgICBkcm9wPUZBTFNFXG5cdCAgICAgICAgdGFyZ2V0Y2FzbGliPVwiQ0FTVVNFUlwiXG5cdCAgICA7XG5cdFxuXG5xdWl0O1xuXG4ifX0=",
        "state": "enabled",
        "contentSourceLocation": "/Public/Custom Steps from Public GitHub",
        "connectors": [],
        "substitutions": {}
      },
      "connectors": [
        {
          "id": "02c1127b-8a3b-402e-9716-8b45b5d920d7",
          "uri": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991",
          "relatedUris": [
            "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e",
            "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690",
            "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f",
            "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1",
            "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407",
            "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab",
            "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a",
            "/files/files/cb511af9-58ca-4519-8db8-405986a36b57",
            "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24",
            "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03",
            "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0",
            "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe",
            "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443",
            "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a",
            "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736"
          ],
          "name": "Custom Steps from Public GitHub",
          "contentType": "application/vnd.sas.content.folder+json",
          "type": "parentFolder",
          "hints": {},
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "type": "application/vnd.sas.transfer.connector"
            }
          ],
          "forceMapping": false
        }
      ]
    },
    {
      "transferObject": {
        "links": [
          {
            "method": "GET",
            "rel": "self",
            "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/d5e1c2d4-ccb6-433d-b2f3-b3b394ece516",
            "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/d5e1c2d4-ccb6-433d-b2f3-b3b394ece516",
            "type": "application/vnd.sas.transfer.object"
          }
        ],
        "version": 2,
        "id": "d5e1c2d4-ccb6-433d-b2f3-b3b394ece516",
        "summary": {
          "creationTimeStamp": "2022-02-23T07:43:24.974Z",
          "modifiedTimeStamp": "2022-02-23T07:43:24.974Z",
          "createdBy": "anonymous",
          "modifiedBy": "anonymous",
          "id": "4f0d7d0b-57aa-4427-966b-acba048f962a",
          "type": "folder",
          "name": "Public",
          "description": "Public folder for general access.",
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/folders/folders/4f0d7d0b-57aa-4427-966b-acba048f962a",
              "uri": "/folders/folders/4f0d7d0b-57aa-4427-966b-acba048f962a",
              "type": "application/vnd.sas.content.folder"
            },
            {
              "method": "DELETE",
              "rel": "delete",
              "href": "/folders/folders/4f0d7d0b-57aa-4427-966b-acba048f962a",
              "uri": "/folders/folders/4f0d7d0b-57aa-4427-966b-acba048f962a"
            },
            {
              "method": "DELETE",
              "rel": "deleteRecursively",
              "href": "/folders/folders/4f0d7d0b-57aa-4427-966b-acba048f962a?recursive=true",
              "uri": "/folders/folders/4f0d7d0b-57aa-4427-966b-acba048f962a?recursive=true"
            },
            {
              "method": "GET",
              "rel": "members",
              "href": "/folders/folders/4f0d7d0b-57aa-4427-966b-acba048f962a/members",
              "uri": "/folders/folders/4f0d7d0b-57aa-4427-966b-acba048f962a/members",
              "type": "application/vnd.sas.collection",
              "itemType": "application/vnd.sas.content.folder"
            },
            {
              "method": "POST",
              "rel": "addMember",
              "href": "/folders/folders/4f0d7d0b-57aa-4427-966b-acba048f962a/members",
              "uri": "/folders/folders/4f0d7d0b-57aa-4427-966b-acba048f962a/members",
              "type": "application/vnd.sas.content.folder.member",
              "responseType": "application/vnd.sas.content.folder.member"
            },
            {
              "method": "GET",
              "rel": "ancestors",
              "href": "/folders/ancestors?childUri=/folders/folders/4f0d7d0b-57aa-4427-966b-acba048f962a",
              "uri": "/folders/ancestors?childUri=/folders/folders/4f0d7d0b-57aa-4427-966b-acba048f962a",
              "type": "application/vnd.sas.content.folder.ancestor"
            },
            {
              "method": "POST",
              "rel": "createChild",
              "href": "/folders/folders?parentFolderUri=/folders/folders/4f0d7d0b-57aa-4427-966b-acba048f962a",
              "uri": "/folders/folders?parentFolderUri=/folders/folders/4f0d7d0b-57aa-4427-966b-acba048f962a",
              "type": "application/vnd.sas.content.folder"
            },
            {
              "method": "PUT",
              "rel": "validateNewMemberName",
              "href": "/folders/commons/validations/folders/4f0d7d0b-57aa-4427-966b-acba048f962a/members/@new/name?value={newname}&type={newtype}",
              "uri": "/folders/commons/validations/folders/4f0d7d0b-57aa-4427-966b-acba048f962a/members/@new/name?value={newname}&type={newtype}",
              "type": "application/vnd.sas.validation"
            },
            {
              "method": "GET",
              "rel": "transferExport",
              "href": "/folders/folders/4f0d7d0b-57aa-4427-966b-acba048f962a",
              "uri": "/folders/folders/4f0d7d0b-57aa-4427-966b-acba048f962a",
              "responseType": "application/vnd.sas.transfer.object"
            },
            {
              "method": "PUT",
              "rel": "transferImportUpdate",
              "href": "/folders/folders/4f0d7d0b-57aa-4427-966b-acba048f962a",
              "uri": "/folders/folders/4f0d7d0b-57aa-4427-966b-acba048f962a",
              "type": "application/vnd.sas.transfer.object",
              "responseType": "application/vnd.sas.summary"
            },
            {
              "method": "POST",
              "rel": "transferImport",
              "href": "/folders/folders",
              "uri": "/folders/folders",
              "type": "application/vnd.sas.transfer.object",
              "responseType": "application/vnd.sas.summary"
            }
          ],
          "version": 2
        },
        "content": "eyJmb2xkZXIiOnsiY3JlYXRpb25UaW1lU3RhbXAiOiIyMDIyLTAyLTIzVDA3OjQzOjI0Ljk3NDY5WiIsImNyZWF0ZWRCeSI6ImFub255bW91cyIsIm1vZGlmaWVkVGltZVN0YW1wIjoiMjAyMi0wMi0yM1QwNzo0MzoyNC45NzQ2OTFaIiwibW9kaWZpZWRCeSI6ImFub255bW91cyIsInZlcnNpb24iOjEsImlkIjoiNGYwZDdkMGItNTdhYS00NDI3LTk2NmItYWNiYTA0OGY5NjJhIiwibmFtZSI6IlB1YmxpYyIsImRlc2NyaXB0aW9uIjoiUHVibGljIGZvbGRlciBmb3IgZ2VuZXJhbCBhY2Nlc3MuIiwidHlwZSI6ImZvbGRlciIsIm1lbWJlckNvdW50Ijo1OSwicHJvcGVydGllcyI6eyJhbGxvd01vdmUiOiJmYWxzZSIsInV1aWQiOiI5MzU4NDJkYS05YmEwLTQ3OWMtOTllMy02YTRlNDg5MzIyZmMifSwibGlua3MiOlt7Im1ldGhvZCI6IkdFVCIsInJlbCI6InNlbGYiLCJocmVmIjoiL2ZvbGRlcnMvZm9sZGVycy80ZjBkN2QwYi01N2FhLTQ0MjctOTY2Yi1hY2JhMDQ4Zjk2MmEiLCJ1cmkiOiIvZm9sZGVycy9mb2xkZXJzLzRmMGQ3ZDBiLTU3YWEtNDQyNy05NjZiLWFjYmEwNDhmOTYyYSIsInR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLmNvbnRlbnQuZm9sZGVyIn0seyJtZXRob2QiOiJERUxFVEUiLCJyZWwiOiJkZWxldGUiLCJocmVmIjoiL2ZvbGRlcnMvZm9sZGVycy80ZjBkN2QwYi01N2FhLTQ0MjctOTY2Yi1hY2JhMDQ4Zjk2MmEiLCJ1cmkiOiIvZm9sZGVycy9mb2xkZXJzLzRmMGQ3ZDBiLTU3YWEtNDQyNy05NjZiLWFjYmEwNDhmOTYyYSJ9LHsibWV0aG9kIjoiREVMRVRFIiwicmVsIjoiZGVsZXRlUmVjdXJzaXZlbHkiLCJocmVmIjoiL2ZvbGRlcnMvZm9sZGVycy80ZjBkN2QwYi01N2FhLTQ0MjctOTY2Yi1hY2JhMDQ4Zjk2MmE/cmVjdXJzaXZlPXRydWUiLCJ1cmkiOiIvZm9sZGVycy9mb2xkZXJzLzRmMGQ3ZDBiLTU3YWEtNDQyNy05NjZiLWFjYmEwNDhmOTYyYT9yZWN1cnNpdmU9dHJ1ZSJ9LHsibWV0aG9kIjoiR0VUIiwicmVsIjoibWVtYmVycyIsImhyZWYiOiIvZm9sZGVycy9mb2xkZXJzLzRmMGQ3ZDBiLTU3YWEtNDQyNy05NjZiLWFjYmEwNDhmOTYyYS9tZW1iZXJzIiwidXJpIjoiL2ZvbGRlcnMvZm9sZGVycy80ZjBkN2QwYi01N2FhLTQ0MjctOTY2Yi1hY2JhMDQ4Zjk2MmEvbWVtYmVycyIsInR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLmNvbGxlY3Rpb24iLCJpdGVtVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMuY29udGVudC5mb2xkZXIifSx7Im1ldGhvZCI6IlBPU1QiLCJyZWwiOiJhZGRNZW1iZXIiLCJocmVmIjoiL2ZvbGRlcnMvZm9sZGVycy80ZjBkN2QwYi01N2FhLTQ0MjctOTY2Yi1hY2JhMDQ4Zjk2MmEvbWVtYmVycyIsInVyaSI6Ii9mb2xkZXJzL2ZvbGRlcnMvNGYwZDdkMGItNTdhYS00NDI3LTk2NmItYWNiYTA0OGY5NjJhL21lbWJlcnMiLCJ0eXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy5jb250ZW50LmZvbGRlci5tZW1iZXIiLCJyZXNwb25zZVR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLmNvbnRlbnQuZm9sZGVyLm1lbWJlciJ9LHsibWV0aG9kIjoiR0VUIiwicmVsIjoiYW5jZXN0b3JzIiwiaHJlZiI6Ii9mb2xkZXJzL2FuY2VzdG9ycz9jaGlsZFVyaT0vZm9sZGVycy9mb2xkZXJzLzRmMGQ3ZDBiLTU3YWEtNDQyNy05NjZiLWFjYmEwNDhmOTYyYSIsInVyaSI6Ii9mb2xkZXJzL2FuY2VzdG9ycz9jaGlsZFVyaT0vZm9sZGVycy9mb2xkZXJzLzRmMGQ3ZDBiLTU3YWEtNDQyNy05NjZiLWFjYmEwNDhmOTYyYSIsInR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLmNvbnRlbnQuZm9sZGVyLmFuY2VzdG9yIn0seyJtZXRob2QiOiJQT1NUIiwicmVsIjoiY3JlYXRlQ2hpbGQiLCJocmVmIjoiL2ZvbGRlcnMvZm9sZGVycz9wYXJlbnRGb2xkZXJVcmk9L2ZvbGRlcnMvZm9sZGVycy80ZjBkN2QwYi01N2FhLTQ0MjctOTY2Yi1hY2JhMDQ4Zjk2MmEiLCJ1cmkiOiIvZm9sZGVycy9mb2xkZXJzP3BhcmVudEZvbGRlclVyaT0vZm9sZGVycy9mb2xkZXJzLzRmMGQ3ZDBiLTU3YWEtNDQyNy05NjZiLWFjYmEwNDhmOTYyYSIsInR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLmNvbnRlbnQuZm9sZGVyIn0seyJtZXRob2QiOiJQVVQiLCJyZWwiOiJ2YWxpZGF0ZU5ld01lbWJlck5hbWUiLCJocmVmIjoiL2ZvbGRlcnMvY29tbW9ucy92YWxpZGF0aW9ucy9mb2xkZXJzLzRmMGQ3ZDBiLTU3YWEtNDQyNy05NjZiLWFjYmEwNDhmOTYyYS9tZW1iZXJzL0BuZXcvbmFtZT92YWx1ZT17bmV3bmFtZX1cdTAwMjZ0eXBlPXtuZXd0eXBlfSIsInVyaSI6Ii9mb2xkZXJzL2NvbW1vbnMvdmFsaWRhdGlvbnMvZm9sZGVycy80ZjBkN2QwYi01N2FhLTQ0MjctOTY2Yi1hY2JhMDQ4Zjk2MmEvbWVtYmVycy9AbmV3L25hbWU/dmFsdWU9e25ld25hbWV9XHUwMDI2dHlwZT17bmV3dHlwZX0iLCJ0eXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy52YWxpZGF0aW9uIn0seyJtZXRob2QiOiJHRVQiLCJyZWwiOiJ0cmFuc2ZlckV4cG9ydCIsImhyZWYiOiIvZm9sZGVycy9mb2xkZXJzLzRmMGQ3ZDBiLTU3YWEtNDQyNy05NjZiLWFjYmEwNDhmOTYyYSIsInVyaSI6Ii9mb2xkZXJzL2ZvbGRlcnMvNGYwZDdkMGItNTdhYS00NDI3LTk2NmItYWNiYTA0OGY5NjJhIiwicmVzcG9uc2VUeXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy50cmFuc2Zlci5vYmplY3QifSx7Im1ldGhvZCI6IlBVVCIsInJlbCI6InRyYW5zZmVySW1wb3J0VXBkYXRlIiwiaHJlZiI6Ii9mb2xkZXJzL2ZvbGRlcnMvNGYwZDdkMGItNTdhYS00NDI3LTk2NmItYWNiYTA0OGY5NjJhIiwidXJpIjoiL2ZvbGRlcnMvZm9sZGVycy80ZjBkN2QwYi01N2FhLTQ0MjctOTY2Yi1hY2JhMDQ4Zjk2MmEiLCJ0eXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy50cmFuc2Zlci5vYmplY3QiLCJyZXNwb25zZVR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLnN1bW1hcnkifSx7Im1ldGhvZCI6IlBPU1QiLCJyZWwiOiJ0cmFuc2ZlckltcG9ydCIsImhyZWYiOiIvZm9sZGVycy9mb2xkZXJzIiwidXJpIjoiL2ZvbGRlcnMvZm9sZGVycyIsInR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLnRyYW5zZmVyLm9iamVjdCIsInJlc3BvbnNlVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMuc3VtbWFyeSJ9XX19",
        "state": "enabled",
        "connectors": [],
        "substitutions": {}
      },
      "connectors": []
    },
    {
      "transferObject": {
        "links": [
          {
            "method": "GET",
            "rel": "self",
            "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/c3592541-3ed5-497e-b8dd-74a41624d53b",
            "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/c3592541-3ed5-497e-b8dd-74a41624d53b",
            "type": "application/vnd.sas.transfer.object"
          }
        ],
        "version": 2,
        "id": "c3592541-3ed5-497e-b8dd-74a41624d53b",
        "summary": {
          "creationTimeStamp": "2023-12-08T19:41:29.184Z",
          "modifiedTimeStamp": "2023-12-08T20:22:21.088Z",
          "createdBy": "arnold.t",
          "modifiedBy": "arnold.t",
          "id": "1980dec5-18c9-4175-9173-b69e3b96bda1",
          "type": "flowStep",
          "name": "DQ - Parse City/Province/Postal.step",
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1",
              "uri": "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1",
              "type": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "GET",
              "rel": "alternate",
              "href": "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1",
              "uri": "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1",
              "type": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "up",
              "href": "/dataFlows/steps",
              "uri": "/dataFlows/steps",
              "type": "application/vnd.sas.collection",
              "itemType": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "PUT",
              "rel": "update",
              "href": "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1",
              "uri": "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1",
              "type": "application/vnd.sas.data.flow.step",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "DELETE",
              "rel": "delete",
              "href": "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1",
              "uri": "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1"
            },
            {
              "method": "POST",
              "rel": "copy",
              "href": "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1/copy",
              "uri": "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1/copy",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "transferExport",
              "href": "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1",
              "uri": "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1",
              "responseType": "application/vnd.sas.transfer.object"
            },
            {
              "method": "PUT",
              "rel": "transferImportUpdate",
              "href": "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1",
              "uri": "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1",
              "type": "application/vnd.sas.transfer.object",
              "responseType": "application/vnd.sas.summary"
            }
          ],
          "version": 2
        },
        "content": "",
        "state": "enabled",
        "contentSourceLocation": "/Public/Custom Steps from Public GitHub",
        "connectors": [],
        "substitutions": {}
      },
      "connectors": [
        {
          "id": "02c1127b-8a3b-402e-9716-8b45b5d920d7",
          "uri": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991",
          "relatedUris": [
            "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e",
            "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690",
            "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f",
            "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1",
            "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407",
            "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab",
            "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a",
            "/files/files/cb511af9-58ca-4519-8db8-405986a36b57",
            "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24",
            "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03",
            "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0",
            "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe",
            "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443",
            "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a",
            "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736"
          ],
          "name": "Custom Steps from Public GitHub",
          "contentType": "application/vnd.sas.content.folder+json",
          "type": "parentFolder",
          "hints": {},
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "type": "application/vnd.sas.transfer.connector"
            }
          ],
          "forceMapping": false
        }
      ]
    },
    {
      "transferObject": {
        "links": [
          {
            "method": "GET",
            "rel": "self",
            "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/be1015cd-f55f-4418-84c3-2e2f21f2ad32",
            "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/be1015cd-f55f-4418-84c3-2e2f21f2ad32",
            "type": "application/vnd.sas.transfer.object"
          }
        ],
        "version": 2,
        "id": "be1015cd-f55f-4418-84c3-2e2f21f2ad32",
        "summary": {
          "creationTimeStamp": "2023-11-28T19:36:33.281Z",
          "modifiedTimeStamp": "2023-11-29T23:48:54.673Z",
          "createdBy": "arnold.t",
          "modifiedBy": "arnold.t",
          "id": "d45ddc20-d8a2-489b-ba30-ee7530aa53d0",
          "type": "flowStep",
          "name": "DQ - RightFielding.step",
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0",
              "uri": "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0",
              "type": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "GET",
              "rel": "alternate",
              "href": "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0",
              "uri": "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0",
              "type": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "up",
              "href": "/dataFlows/steps",
              "uri": "/dataFlows/steps",
              "type": "application/vnd.sas.collection",
              "itemType": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "PUT",
              "rel": "update",
              "href": "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0",
              "uri": "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0",
              "type": "application/vnd.sas.data.flow.step",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "DELETE",
              "rel": "delete",
              "href": "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0",
              "uri": "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0"
            },
            {
              "method": "POST",
              "rel": "copy",
              "href": "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0/copy",
              "uri": "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0/copy",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "transferExport",
              "href": "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0",
              "uri": "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0",
              "responseType": "application/vnd.sas.transfer.object"
            },
            {
              "method": "PUT",
              "rel": "transferImportUpdate",
              "href": "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0",
              "uri": "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0",
              "type": "application/vnd.sas.transfer.object",
              "responseType": "application/vnd.sas.summary"
            }
          ],
          "version": 2
        },
        "content": "",
        "state": "enabled",
        "contentSourceLocation": "/Public/Custom Steps from Public GitHub",
        "connectors": [],
        "substitutions": {}
      },
      "connectors": [
        {
          "id": "02c1127b-8a3b-402e-9716-8b45b5d920d7",
          "uri": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991",
          "relatedUris": [
            "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e",
            "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690",
            "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f",
            "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1",
            "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407",
            "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab",
            "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a",
            "/files/files/cb511af9-58ca-4519-8db8-405986a36b57",
            "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24",
            "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03",
            "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0",
            "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe",
            "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443",
            "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a",
            "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736"
          ],
          "name": "Custom Steps from Public GitHub",
          "contentType": "application/vnd.sas.content.folder+json",
          "type": "parentFolder",
          "hints": {},
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "type": "application/vnd.sas.transfer.connector"
            }
          ],
          "forceMapping": false
        }
      ]
    },
    {
      "transferObject": {
        "links": [
          {
            "method": "GET",
            "rel": "self",
            "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/03eb8dd7-6101-4235-bb0d-ba83586995f8",
            "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/03eb8dd7-6101-4235-bb0d-ba83586995f8",
            "type": "application/vnd.sas.transfer.object"
          }
        ],
        "version": 2,
        "id": "03eb8dd7-6101-4235-bb0d-ba83586995f8",
        "summary": {
          "creationTimeStamp": "2023-08-27T23:58:05.128Z",
          "modifiedTimeStamp": "2023-09-05T16:12:19.444Z",
          "createdBy": "lorne.r",
          "modifiedBy": "lorne.r",
          "id": "12f4871a-66b6-49c7-8434-b2860b817f7a",
          "type": "flowStep",
          "name": "SDG - Train a Synthetic Data Generator1.step",
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a",
              "uri": "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a",
              "type": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "GET",
              "rel": "alternate",
              "href": "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a",
              "uri": "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a",
              "type": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "up",
              "href": "/dataFlows/steps",
              "uri": "/dataFlows/steps",
              "type": "application/vnd.sas.collection",
              "itemType": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "PUT",
              "rel": "update",
              "href": "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a",
              "uri": "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a",
              "type": "application/vnd.sas.data.flow.step",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "DELETE",
              "rel": "delete",
              "href": "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a",
              "uri": "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a"
            },
            {
              "method": "POST",
              "rel": "copy",
              "href": "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a/copy",
              "uri": "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a/copy",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "transferExport",
              "href": "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a",
              "uri": "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a",
              "responseType": "application/vnd.sas.transfer.object"
            },
            {
              "method": "PUT",
              "rel": "transferImportUpdate",
              "href": "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a",
              "uri": "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a",
              "type": "application/vnd.sas.transfer.object",
              "responseType": "application/vnd.sas.summary"
            }
          ],
          "version": 2
        },
        "content": "",
        "state": "enabled",
        "contentSourceLocation": "/Public/Custom Steps from Public GitHub",
        "connectors": [],
        "substitutions": {}
      },
      "connectors": [
        {
          "id": "02c1127b-8a3b-402e-9716-8b45b5d920d7",
          "uri": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991",
          "relatedUris": [
            "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e",
            "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690",
            "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f",
            "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1",
            "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407",
            "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab",
            "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a",
            "/files/files/cb511af9-58ca-4519-8db8-405986a36b57",
            "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24",
            "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03",
            "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0",
            "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe",
            "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443",
            "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a",
            "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736"
          ],
          "name": "Custom Steps from Public GitHub",
          "contentType": "application/vnd.sas.content.folder+json",
          "type": "parentFolder",
          "hints": {},
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "type": "application/vnd.sas.transfer.connector"
            }
          ],
          "forceMapping": false
        }
      ]
    },
    {
      "transferObject": {
        "links": [
          {
            "method": "GET",
            "rel": "self",
            "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/456fb280-23b4-4032-a7ea-02cb7376db3a",
            "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/456fb280-23b4-4032-a7ea-02cb7376db3a",
            "type": "application/vnd.sas.transfer.object"
          }
        ],
        "version": 2,
        "id": "456fb280-23b4-4032-a7ea-02cb7376db3a",
        "summary": {
          "creationTimeStamp": "2023-08-25T20:36:00.729Z",
          "modifiedTimeStamp": "2023-09-05T12:29:24.484Z",
          "createdBy": "lorne.r",
          "modifiedBy": "lorne.r",
          "id": "4f344467-1e79-475c-80a3-3ef34690f690",
          "type": "flowStep",
          "name": "SDG - Generate Synthetic Data1.step",
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690",
              "uri": "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690",
              "type": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "GET",
              "rel": "alternate",
              "href": "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690",
              "uri": "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690",
              "type": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "up",
              "href": "/dataFlows/steps",
              "uri": "/dataFlows/steps",
              "type": "application/vnd.sas.collection",
              "itemType": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "PUT",
              "rel": "update",
              "href": "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690",
              "uri": "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690",
              "type": "application/vnd.sas.data.flow.step",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "DELETE",
              "rel": "delete",
              "href": "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690",
              "uri": "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690"
            },
            {
              "method": "POST",
              "rel": "copy",
              "href": "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690/copy",
              "uri": "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690/copy",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "transferExport",
              "href": "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690",
              "uri": "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690",
              "responseType": "application/vnd.sas.transfer.object"
            },
            {
              "method": "PUT",
              "rel": "transferImportUpdate",
              "href": "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690",
              "uri": "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690",
              "type": "application/vnd.sas.transfer.object",
              "responseType": "application/vnd.sas.summary"
            }
          ],
          "version": 2
        },
        "content": "",
        "state": "enabled",
        "contentSourceLocation": "/Public/Custom Steps from Public GitHub",
        "connectors": [],
        "substitutions": {}
      },
      "connectors": [
        {
          "id": "02c1127b-8a3b-402e-9716-8b45b5d920d7",
          "uri": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991",
          "relatedUris": [
            "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e",
            "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690",
            "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f",
            "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1",
            "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407",
            "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab",
            "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a",
            "/files/files/cb511af9-58ca-4519-8db8-405986a36b57",
            "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24",
            "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03",
            "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0",
            "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe",
            "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443",
            "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a",
            "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736"
          ],
          "name": "Custom Steps from Public GitHub",
          "contentType": "application/vnd.sas.content.folder+json",
          "type": "parentFolder",
          "hints": {},
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "type": "application/vnd.sas.transfer.connector"
            }
          ],
          "forceMapping": false
        }
      ]
    },
    {
      "transferObject": {
        "links": [
          {
            "method": "GET",
            "rel": "self",
            "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/58f95ca5-3b94-41ee-a8dc-9728438bc125",
            "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/58f95ca5-3b94-41ee-a8dc-9728438bc125",
            "type": "application/vnd.sas.transfer.object"
          }
        ],
        "version": 2,
        "id": "58f95ca5-3b94-41ee-a8dc-9728438bc125",
        "summary": {
          "creationTimeStamp": "2023-03-17T16:01:27.761Z",
          "modifiedTimeStamp": "2023-08-25T14:00:28.069Z",
          "createdBy": "simon.s",
          "modifiedBy": "lorne.r",
          "id": "d92babf7-51d0-4257-9a74-74e29a3d39fe",
          "type": "flowStep",
          "name": "SDG - Generate Synthetic Data.step",
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe",
              "uri": "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe",
              "type": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "GET",
              "rel": "alternate",
              "href": "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe",
              "uri": "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe",
              "type": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "up",
              "href": "/dataFlows/steps",
              "uri": "/dataFlows/steps",
              "type": "application/vnd.sas.collection",
              "itemType": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "PUT",
              "rel": "update",
              "href": "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe",
              "uri": "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe",
              "type": "application/vnd.sas.data.flow.step",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "DELETE",
              "rel": "delete",
              "href": "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe",
              "uri": "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe"
            },
            {
              "method": "POST",
              "rel": "copy",
              "href": "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe/copy",
              "uri": "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe/copy",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "transferExport",
              "href": "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe",
              "uri": "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe",
              "responseType": "application/vnd.sas.transfer.object"
            },
            {
              "method": "PUT",
              "rel": "transferImportUpdate",
              "href": "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe",
              "uri": "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe",
              "type": "application/vnd.sas.transfer.object",
              "responseType": "application/vnd.sas.summary"
            }
          ],
          "version": 2
        },
        "content": "",
        "state": "enabled",
        "contentSourceLocation": "/Public/Custom Steps from Public GitHub",
        "connectors": [],
        "substitutions": {}
      },
      "connectors": [
        {
          "id": "02c1127b-8a3b-402e-9716-8b45b5d920d7",
          "uri": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991",
          "relatedUris": [
            "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e",
            "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690",
            "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f",
            "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1",
            "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407",
            "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab",
            "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a",
            "/files/files/cb511af9-58ca-4519-8db8-405986a36b57",
            "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24",
            "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03",
            "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0",
            "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe",
            "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443",
            "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a",
            "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736"
          ],
          "name": "Custom Steps from Public GitHub",
          "contentType": "application/vnd.sas.content.folder+json",
          "type": "parentFolder",
          "hints": {},
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "type": "application/vnd.sas.transfer.connector"
            }
          ],
          "forceMapping": false
        }
      ]
    },
    {
      "transferObject": {
        "links": [
          {
            "method": "GET",
            "rel": "self",
            "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/ccd1428c-8ef3-4410-ab55-67c7cfc51332",
            "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/ccd1428c-8ef3-4410-ab55-67c7cfc51332",
            "type": "application/vnd.sas.transfer.object"
          }
        ],
        "version": 2,
        "id": "ccd1428c-8ef3-4410-ab55-67c7cfc51332",
        "summary": {
          "creationTimeStamp": "2023-03-17T16:01:27.717Z",
          "modifiedTimeStamp": "2023-08-25T14:00:28.163Z",
          "createdBy": "simon.s",
          "modifiedBy": "lorne.r",
          "id": "32df8157-716a-48f1-b9db-c12a47fbf1ab",
          "type": "flowStep",
          "name": "SDG - Train a Synthetic Data Generator.step",
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab",
              "uri": "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab",
              "type": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "GET",
              "rel": "alternate",
              "href": "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab",
              "uri": "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab",
              "type": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "up",
              "href": "/dataFlows/steps",
              "uri": "/dataFlows/steps",
              "type": "application/vnd.sas.collection",
              "itemType": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "PUT",
              "rel": "update",
              "href": "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab",
              "uri": "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab",
              "type": "application/vnd.sas.data.flow.step",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "DELETE",
              "rel": "delete",
              "href": "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab",
              "uri": "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab"
            },
            {
              "method": "POST",
              "rel": "copy",
              "href": "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab/copy",
              "uri": "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab/copy",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "transferExport",
              "href": "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab",
              "uri": "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab",
              "responseType": "application/vnd.sas.transfer.object"
            },
            {
              "method": "PUT",
              "rel": "transferImportUpdate",
              "href": "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab",
              "uri": "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab",
              "type": "application/vnd.sas.transfer.object",
              "responseType": "application/vnd.sas.summary"
            }
          ],
          "version": 2
        },
        "content": "",
        "state": "enabled",
        "contentSourceLocation": "/Public/Custom Steps from Public GitHub",
        "connectors": [],
        "substitutions": {}
      },
      "connectors": [
        {
          "id": "02c1127b-8a3b-402e-9716-8b45b5d920d7",
          "uri": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991",
          "relatedUris": [
            "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e",
            "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690",
            "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f",
            "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1",
            "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407",
            "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab",
            "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a",
            "/files/files/cb511af9-58ca-4519-8db8-405986a36b57",
            "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24",
            "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03",
            "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0",
            "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe",
            "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443",
            "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a",
            "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736"
          ],
          "name": "Custom Steps from Public GitHub",
          "contentType": "application/vnd.sas.content.folder+json",
          "type": "parentFolder",
          "hints": {},
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "type": "application/vnd.sas.transfer.connector"
            }
          ],
          "forceMapping": false
        }
      ]
    },
    {
      "transferObject": {
        "links": [
          {
            "method": "GET",
            "rel": "self",
            "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/acc8889e-7652-4239-b017-f89129dd3f8d",
            "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/acc8889e-7652-4239-b017-f89129dd3f8d",
            "type": "application/vnd.sas.transfer.object"
          }
        ],
        "version": 2,
        "id": "acc8889e-7652-4239-b017-f89129dd3f8d",
        "summary": {
          "creationTimeStamp": "2023-03-17T16:01:27.584Z",
          "modifiedTimeStamp": "2023-08-25T14:00:28.018Z",
          "createdBy": "simon.s",
          "modifiedBy": "lorne.r",
          "id": "1db95532-9991-429b-aaab-8b562b969407",
          "type": "flowStep",
          "name": "SDG - Generate Correlation Plot Comparison.step",
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407",
              "uri": "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407",
              "type": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "GET",
              "rel": "alternate",
              "href": "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407",
              "uri": "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407",
              "type": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "up",
              "href": "/dataFlows/steps",
              "uri": "/dataFlows/steps",
              "type": "application/vnd.sas.collection",
              "itemType": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "PUT",
              "rel": "update",
              "href": "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407",
              "uri": "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407",
              "type": "application/vnd.sas.data.flow.step",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "DELETE",
              "rel": "delete",
              "href": "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407",
              "uri": "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407"
            },
            {
              "method": "POST",
              "rel": "copy",
              "href": "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407/copy",
              "uri": "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407/copy",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "transferExport",
              "href": "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407",
              "uri": "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407",
              "responseType": "application/vnd.sas.transfer.object"
            },
            {
              "method": "PUT",
              "rel": "transferImportUpdate",
              "href": "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407",
              "uri": "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407",
              "type": "application/vnd.sas.transfer.object",
              "responseType": "application/vnd.sas.summary"
            }
          ],
          "version": 2
        },
        "content": "eyJjcmVhdGlvblRpbWVTdGFtcCI6IjIwMjMtMDMtMTdUMTY6MDE6MjcuNTg0NDgzWiIsImNyZWF0ZWRCeSI6InNpbW9uLnMiLCJtb2RpZmllZFRpbWVTdGFtcCI6IjIwMjMtMDgtMjVUMTQ6MDA6MjguMDE4MDEzWiIsIm1vZGlmaWVkQnkiOiJsb3JuZS5yIiwiaWQiOiIxZGI5NTUzMi05OTkxLTQyOWItYWFhYi04YjU2MmI5Njk0MDciLCJuYW1lIjoiU0RHIC0gR2VuZXJhdGUgQ29ycmVsYXRpb24gUGxvdCBDb21wYXJpc29uLnN0ZXAiLCJkaXNwbGF5TmFtZSI6IlNERyAtIEdlbmVyYXRlIENvcnJlbGF0aW9uIFBsb3QgQ29tcGFyaXNvbi5zdGVwIiwibG9jYWxEaXNwbGF5TmFtZSI6IlNERyAtIEdlbmVyYXRlIENvcnJlbGF0aW9uIFBsb3QgQ29tcGFyaXNvbi5zdGVwIiwibGlua3MiOlt7Im1ldGhvZCI6IkdFVCIsInJlbCI6InNlbGYiLCJocmVmIjoiL2RhdGFGbG93cy9zdGVwcy8xZGI5NTUzMi05OTkxLTQyOWItYWFhYi04YjU2MmI5Njk0MDciLCJ1cmkiOiIvZGF0YUZsb3dzL3N0ZXBzLzFkYjk1NTMyLTk5OTEtNDI5Yi1hYWFiLThiNTYyYjk2OTQwNyIsInR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLmRhdGEuZmxvdy5zdGVwLnN1bW1hcnkifSx7Im1ldGhvZCI6IkdFVCIsInJlbCI6ImFsdGVybmF0ZSIsImhyZWYiOiIvZGF0YUZsb3dzL3N0ZXBzLzFkYjk1NTMyLTk5OTEtNDI5Yi1hYWFiLThiNTYyYjk2OTQwNyIsInVyaSI6Ii9kYXRhRmxvd3Mvc3RlcHMvMWRiOTU1MzItOTk5MS00MjliLWFhYWItOGI1NjJiOTY5NDA3IiwidHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMuZGF0YS5mbG93LnN0ZXAifSx7Im1ldGhvZCI6IkdFVCIsInJlbCI6InVwIiwiaHJlZiI6Ii9kYXRhRmxvd3Mvc3RlcHMiLCJ1cmkiOiIvZGF0YUZsb3dzL3N0ZXBzIiwidHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMuY29sbGVjdGlvbiIsIml0ZW1UeXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy5kYXRhLmZsb3cuc3RlcC5zdW1tYXJ5In0seyJtZXRob2QiOiJQVVQiLCJyZWwiOiJ1cGRhdGUiLCJocmVmIjoiL2RhdGFGbG93cy9zdGVwcy8xZGI5NTUzMi05OTkxLTQyOWItYWFhYi04YjU2MmI5Njk0MDciLCJ1cmkiOiIvZGF0YUZsb3dzL3N0ZXBzLzFkYjk1NTMyLTk5OTEtNDI5Yi1hYWFiLThiNTYyYjk2OTQwNyIsInR5cGUiOiJhcHBsaWNhdGlvbi92bmQuc2FzLmRhdGEuZmxvdy5zdGVwIiwicmVzcG9uc2VUeXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy5kYXRhLmZsb3cuc3RlcCJ9LHsibWV0aG9kIjoiREVMRVRFIiwicmVsIjoiZGVsZXRlIiwiaHJlZiI6Ii9kYXRhRmxvd3Mvc3RlcHMvMWRiOTU1MzItOTk5MS00MjliLWFhYWItOGI1NjJiOTY5NDA3IiwidXJpIjoiL2RhdGFGbG93cy9zdGVwcy8xZGI5NTUzMi05OTkxLTQyOWItYWFhYi04YjU2MmI5Njk0MDcifSx7Im1ldGhvZCI6IlBPU1QiLCJyZWwiOiJjb3B5IiwiaHJlZiI6Ii9kYXRhRmxvd3Mvc3RlcHMvMWRiOTU1MzItOTk5MS00MjliLWFhYWItOGI1NjJiOTY5NDA3L2NvcHkiLCJ1cmkiOiIvZGF0YUZsb3dzL3N0ZXBzLzFkYjk1NTMyLTk5OTEtNDI5Yi1hYWFiLThiNTYyYjk2OTQwNy9jb3B5IiwicmVzcG9uc2VUeXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy5kYXRhLmZsb3cuc3RlcCJ9LHsibWV0aG9kIjoiR0VUIiwicmVsIjoidHJhbnNmZXJFeHBvcnQiLCJocmVmIjoiL2RhdGFGbG93cy9zdGVwcy8xZGI5NTUzMi05OTkxLTQyOWItYWFhYi04YjU2MmI5Njk0MDciLCJ1cmkiOiIvZGF0YUZsb3dzL3N0ZXBzLzFkYjk1NTMyLTk5OTEtNDI5Yi1hYWFiLThiNTYyYjk2OTQwNyIsInJlc3BvbnNlVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMudHJhbnNmZXIub2JqZWN0In0seyJtZXRob2QiOiJQVVQiLCJyZWwiOiJ0cmFuc2ZlckltcG9ydFVwZGF0ZSIsImhyZWYiOiIvZGF0YUZsb3dzL3N0ZXBzLzFkYjk1NTMyLTk5OTEtNDI5Yi1hYWFiLThiNTYyYjk2OTQwNyIsInVyaSI6Ii9kYXRhRmxvd3Mvc3RlcHMvMWRiOTU1MzItOTk5MS00MjliLWFhYWItOGI1NjJiOTY5NDA3IiwidHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5zYXMudHJhbnNmZXIub2JqZWN0IiwicmVzcG9uc2VUeXBlIjoiYXBwbGljYXRpb24vdm5kLnNhcy5zdW1tYXJ5In1dLCJtZXRhZGF0YVZlcnNpb24iOjAsInZlcnNpb24iOjIsInR5cGUiOiJjb2RlIiwiZmxvd01ldGFkYXRhIjp7ImlucHV0UG9ydHMiOlt7Im5hbWUiOiJpbnB1dHRhYmxlMSIsImRpc3BsYXlOYW1lIjoiaW5wdXR0YWJsZTEiLCJsb2NhbERpc3BsYXlOYW1lIjoiaW5wdXR0YWJsZTEiLCJtaW5FbnRyaWVzIjoxLCJtYXhFbnRyaWVzIjoxLCJkZWZhdWx0RW50cmllcyI6MCwidHlwZSI6InRhYmxlIn0seyJuYW1lIjoiaW5wdXR0YWJsZTIiLCJkaXNwbGF5TmFtZSI6ImlucHV0dGFibGUyIiwibG9jYWxEaXNwbGF5TmFtZSI6ImlucHV0dGFibGUyIiwibWluRW50cmllcyI6MSwibWF4RW50cmllcyI6MSwiZGVmYXVsdEVudHJpZXMiOjAsInR5cGUiOiJ0YWJsZSJ9XX0sInVpIjoie1xuXHRcInNob3dQYWdlQ29udGVudE9ubHlcIjogdHJ1ZSxcblx0XCJwYWdlc1wiOiBbXG5cdFx0e1xuXHRcdFx0XCJpZFwiOiBcInBhZ2UxXCIsXG5cdFx0XHRcInR5cGVcIjogXCJwYWdlXCIsXG5cdFx0XHRcImxhYmVsXCI6IFwiQ29ycmVsYXRpb24gUGxvdFwiLFxuXHRcdFx0XCJjaGlsZHJlblwiOiBbXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRcImlkXCI6IFwiaW5wdXR0YWJsZTFcIixcblx0XHRcdFx0XHRcInR5cGVcIjogXCJpbnB1dHRhYmxlXCIsXG5cdFx0XHRcdFx0XCJsYWJlbFwiOiBcIlRyYWluIERhdGFcIixcblx0XHRcdFx0XHRcInJlcXVpcmVkXCI6IHRydWUsXG5cdFx0XHRcdFx0XCJwbGFjZWhvbGRlclwiOiBcIlwiLFxuXHRcdFx0XHRcdFwidmlzaWJsZVwiOiBcIlwiXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRcImlkXCI6IFwiaW5wdXR0YWJsZTJcIixcblx0XHRcdFx0XHRcInR5cGVcIjogXCJpbnB1dHRhYmxlXCIsXG5cdFx0XHRcdFx0XCJsYWJlbFwiOiBcIlN5bnRoZXRpYyBEYXRhXCIsXG5cdFx0XHRcdFx0XCJyZXF1aXJlZFwiOiB0cnVlLFxuXHRcdFx0XHRcdFwicGxhY2Vob2xkZXJcIjogXCJcIixcblx0XHRcdFx0XHRcInZpc2libGVcIjogXCJcIlxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0XCJpZFwiOiBcImNvbHVtbnNlbGVjdG9yMVwiLFxuXHRcdFx0XHRcdFwidHlwZVwiOiBcImNvbHVtbnNlbGVjdG9yXCIsXG5cdFx0XHRcdFx0XCJsYWJlbFwiOiBcIlNlbGVjdCBjb2x1bW5zIGZvciBjb3JyZWxhdGlvbiBwbG90XCIsXG5cdFx0XHRcdFx0XCJvcmRlclwiOiBmYWxzZSxcblx0XHRcdFx0XHRcImNvbHVtbnR5cGVcIjogXCJuXCIsXG5cdFx0XHRcdFx0XCJtYXhcIjogbnVsbCxcblx0XHRcdFx0XHRcIm1pblwiOiBudWxsLFxuXHRcdFx0XHRcdFwidmlzaWJsZVwiOiBcIlwiLFxuXHRcdFx0XHRcdFwidGFibGVcIjogXCJpbnB1dHRhYmxlMlwiXG5cdFx0XHRcdH1cblx0XHRcdF1cblx0XHR9LFxuXHRcdHtcblx0XHRcdFwiaWRcIjogXCJwYWdlMlwiLFxuXHRcdFx0XCJ0eXBlXCI6IFwicGFnZVwiLFxuXHRcdFx0XCJsYWJlbFwiOiBcIkFib3V0XCIsXG5cdFx0XHRcImNoaWxkcmVuXCI6IFtcblx0XHRcdFx0e1xuXHRcdFx0XHRcdFwiaWRcIjogXCJ0ZXh0X2Rlc2NyaXB0aW9uXCIsXG5cdFx0XHRcdFx0XCJ0eXBlXCI6IFwidGV4dFwiLFxuXHRcdFx0XHRcdFwidGV4dFwiOiBcIkdlbmVyYXRlIENvcnJlbGF0aW9uIFBsb3QgQ29tcGFyaXNvblxcblxcblRoZSBcXFwiR2VuZXJhdGUgQ29ycmVsYXRpb24gUGxvdCBDb21wYXJpc29uXFxcIiBjdXN0b20gc3RlcCBnZW5lcmF0ZXMgY29ycmVsYXRpb24gcGxvdHMgZGVwaWN0aW5nIGNvcnJlbGF0aW9ucyBvZiBzZWxlY3RlZCB2YXJpYWJsZXMgZm9yIGJvdGggb3JpZ2luYWwgYW5kIHN5bnRoZXRpYyBkYXRhLCBzbyB0aGF0IHVzZXJzIGNhbiB1bmRlcnN0YW5kIGlmIGludHJhLWRhdGFzZXQgY29ycmVsYXRpb24gaW4gdGhlaXIgc3ludGhldGljIGRhdGEgaXMgYWRlcXVhdGVseSBzaW1pbGFyIHRvIHRoYXQgb2YgdGhlIG9yaWdpbmFsLiBUaGlzIHN0ZXAgcmVzdWx0cyBpbiBhIGNoYXJ0IHByaW50ZWQgaW4gdGhlIFJlc3VsdHMgVGFiLCBhY2Nlc3NpYmxlIGZyb20gdGhlIFN1Ym1pc3Npb24gd2luZG93LiAgSXQgYWxzbyBjcmVhdGVzIGFuZCBsb2FkcyBhbiBpbi1tZW1vcnkgdGFibGUgd2hpY2ggaXMgYXZhaWxhYmxlIGZvciByZXBvcnRpbmcgaW4gVmlzdWFsIEFuYWx5dGljcy4gIFxcblxcbldoaWxlIHRoZSBwdXJwb3NlIG9mIHRoaXMgY3VzdG9tIHN0ZXAgaXMgdG8gYXNzaXN0IGluIHN5bnRoZXRpYyBkYXRhIGdlbmVyYXRpb24sIHVzZXJzIG1heSBjaG9vc2UgdG8gcmVwdXJwb3NlIHRoZSBzYW1lIHRvIGNvbXBhcmUgaW50cmEtZGF0YXNldCBjb3JyZWxhdGlvbnMgb2YgYW55IHR3byB0YWJsZXMgd2l0aCB0aGUgc2FtZSB2YXJpYWJsZXMuICBKdXN0IGVuc3VyZSB0aGF0IHRoZSBkYXRhc2V0IHByb3ZpZGVkIHRvIHRoZSBTeW50aGV0aWMgRGF0YSBpbnB1dCBwb3J0IGhhcyBhIFRSQUlORkxBRyBzZXQgdG8gMS4gXFxuXFxuSW5wdXQgcGFyYW1ldGVycyBmb3IgdGhpcyBjdXN0b20gc3RlcCBhcmUgOiBcXG5cXG4xLiBBdHRhY2ggYSB0YWJsZSBjb250YWluaW5nIHRoZSBvcmlnaW5hbCB0cmFpbmluZyBkYXRhIHRvIHRoZSBUcmFpbmluZyBEYXRhIGlucHV0IHBvcnQuXFxuMi4gQXR0YWNoIGEgdGFibGUgY29udGFpbmluZyB0aGUgc3ludGhldGljIGRhdGEgdG8gdGhlIFN5bnRoZXRpYyBEYXRhIGlucHV0IHBvcnRcXG4zLiBTZWxlY3QgdGhlIGNvbHVtbnMgeW91IHdpc2ggdG8gZ2VuZXJhdGUgY29ycmVsYXRpb24gcGxvdHMgZm9yLlxcblxcblRoZXJlIGFyZSBubyBleHBsaWNpdCBvdXRwdXQgZGF0YXNldHMgY3JlYXRlZCB3aGljaCBhcmUgaW50ZW5kZWQgdG8gYmUgdXNlZCBmdXJ0aGVyIGluIHRoZSBmbG93LiAgSG93ZXZlciwgIHlvdSdsbCBub3RpY2UgdGhhdCB5b3VyIENBU1VTRVIgY2FzbGliIHdpbGwgbm93IGNvbnRhaW4gYSB0YWJsZSAoc3ludGhldGljX2RhdGFfY29ycl9wbG90KSAgd2hpY2ggaXMgYWxzbyBsb2FkZWQgdG8gbWVtb3J5LiAgWW91IG1heSBjaG9vc2UgdG8gdmlzdWFsaXplIHRoaXMgdXNpbmcgU0FTIFZpc3VhbCBBbmFseXRpY3MuXFxuXFxuQ3JlYXRlZCAvIGNvbnRhY3QgOiBCcmV0dCBXdWplayAoYnJldHQud3VqZWtAc2FzLmNvbSksICBSZXphIE5hemFyaSAocmV6YS5uYXphcmlAc2FzLmNvbSkgLCBSdWl3ZW4gWmhhbmcgKHJ1aXdlbi56aGFuZ0BzYXMuY29tKSBhbmQgU3VuZGFyZXNoIFNhbmthcmFuIChzdW5kYXJlc2guc2Fua2FyYW5Ac2FzLmNvbSkgXFxuXFxuVmVyc2lvbiA6IDEuMC4gICAoMDZPQ1QyMDIyKVwiLFxuXHRcdFx0XHRcdFwidmlzaWJsZVwiOiBcIlwiXG5cdFx0XHRcdH1cblx0XHRcdF1cblx0XHR9XG5cdF0sXG5cdFwic3ludGF4dmVyc2lvblwiOiBcIjEuMy4wXCIsXG5cdFwidmFsdWVzXCI6IHtcblx0XHRcImlucHV0dGFibGUxXCI6IHtcblx0XHRcdFwibGlicmFyeVwiOiBcIlwiLFxuXHRcdFx0XCJ0YWJsZVwiOiBcIlwiXG5cdFx0fSxcblx0XHRcImlucHV0dGFibGUyXCI6IHtcblx0XHRcdFwibGlicmFyeVwiOiBcIlwiLFxuXHRcdFx0XCJ0YWJsZVwiOiBcIlwiXG5cdFx0fSxcblx0XHRcImNvbHVtbnNlbGVjdG9yMVwiOiBbXVxuXHR9XG59IiwibG9jYWxVaSI6IntcInBhZ2VzXCI6W3tcImNoaWxkcmVuXCI6W3tcImlkXCI6XCJpbnB1dHRhYmxlMVwiLFwibGFiZWxcIjpcIlRyYWluIERhdGFcIixcInBsYWNlaG9sZGVyXCI6XCJcIixcInJlcXVpcmVkXCI6dHJ1ZSxcInR5cGVcIjpcImlucHV0dGFibGVcIixcInZpc2libGVcIjpcIlwifSx7XCJpZFwiOlwiaW5wdXR0YWJsZTJcIixcImxhYmVsXCI6XCJTeW50aGV0aWMgRGF0YVwiLFwicGxhY2Vob2xkZXJcIjpcIlwiLFwicmVxdWlyZWRcIjp0cnVlLFwidHlwZVwiOlwiaW5wdXR0YWJsZVwiLFwidmlzaWJsZVwiOlwiXCJ9LHtcImNvbHVtbnR5cGVcIjpcIm5cIixcImlkXCI6XCJjb2x1bW5zZWxlY3RvcjFcIixcImxhYmVsXCI6XCJTZWxlY3QgY29sdW1ucyBmb3IgY29ycmVsYXRpb24gcGxvdFwiLFwibWF4XCI6bnVsbCxcIm1pblwiOm51bGwsXCJvcmRlclwiOmZhbHNlLFwidGFibGVcIjpcImlucHV0dGFibGUyXCIsXCJ0eXBlXCI6XCJjb2x1bW5zZWxlY3RvclwiLFwidmlzaWJsZVwiOlwiXCJ9XSxcImlkXCI6XCJwYWdlMVwiLFwibGFiZWxcIjpcIkNvcnJlbGF0aW9uIFBsb3RcIixcInR5cGVcIjpcInBhZ2VcIn0se1wiY2hpbGRyZW5cIjpbe1wiaWRcIjpcInRleHRfZGVzY3JpcHRpb25cIixcInRleHRcIjpcIkdlbmVyYXRlIENvcnJlbGF0aW9uIFBsb3QgQ29tcGFyaXNvblxcblxcblRoZSBcXFwiR2VuZXJhdGUgQ29ycmVsYXRpb24gUGxvdCBDb21wYXJpc29uXFxcIiBjdXN0b20gc3RlcCBnZW5lcmF0ZXMgY29ycmVsYXRpb24gcGxvdHMgZGVwaWN0aW5nIGNvcnJlbGF0aW9ucyBvZiBzZWxlY3RlZCB2YXJpYWJsZXMgZm9yIGJvdGggb3JpZ2luYWwgYW5kIHN5bnRoZXRpYyBkYXRhLCBzbyB0aGF0IHVzZXJzIGNhbiB1bmRlcnN0YW5kIGlmIGludHJhLWRhdGFzZXQgY29ycmVsYXRpb24gaW4gdGhlaXIgc3ludGhldGljIGRhdGEgaXMgYWRlcXVhdGVseSBzaW1pbGFyIHRvIHRoYXQgb2YgdGhlIG9yaWdpbmFsLiBUaGlzIHN0ZXAgcmVzdWx0cyBpbiBhIGNoYXJ0IHByaW50ZWQgaW4gdGhlIFJlc3VsdHMgVGFiLCBhY2Nlc3NpYmxlIGZyb20gdGhlIFN1Ym1pc3Npb24gd2luZG93LiAgSXQgYWxzbyBjcmVhdGVzIGFuZCBsb2FkcyBhbiBpbi1tZW1vcnkgdGFibGUgd2hpY2ggaXMgYXZhaWxhYmxlIGZvciByZXBvcnRpbmcgaW4gVmlzdWFsIEFuYWx5dGljcy4gIFxcblxcbldoaWxlIHRoZSBwdXJwb3NlIG9mIHRoaXMgY3VzdG9tIHN0ZXAgaXMgdG8gYXNzaXN0IGluIHN5bnRoZXRpYyBkYXRhIGdlbmVyYXRpb24sIHVzZXJzIG1heSBjaG9vc2UgdG8gcmVwdXJwb3NlIHRoZSBzYW1lIHRvIGNvbXBhcmUgaW50cmEtZGF0YXNldCBjb3JyZWxhdGlvbnMgb2YgYW55IHR3byB0YWJsZXMgd2l0aCB0aGUgc2FtZSB2YXJpYWJsZXMuICBKdXN0IGVuc3VyZSB0aGF0IHRoZSBkYXRhc2V0IHByb3ZpZGVkIHRvIHRoZSBTeW50aGV0aWMgRGF0YSBpbnB1dCBwb3J0IGhhcyBhIFRSQUlORkxBRyBzZXQgdG8gMS4gXFxuXFxuSW5wdXQgcGFyYW1ldGVycyBmb3IgdGhpcyBjdXN0b20gc3RlcCBhcmUgOiBcXG5cXG4xLiBBdHRhY2ggYSB0YWJsZSBjb250YWluaW5nIHRoZSBvcmlnaW5hbCB0cmFpbmluZyBkYXRhIHRvIHRoZSBUcmFpbmluZyBEYXRhIGlucHV0IHBvcnQuXFxuMi4gQXR0YWNoIGEgdGFibGUgY29udGFpbmluZyB0aGUgc3ludGhldGljIGRhdGEgdG8gdGhlIFN5bnRoZXRpYyBEYXRhIGlucHV0IHBvcnRcXG4zLiBTZWxlY3QgdGhlIGNvbHVtbnMgeW91IHdpc2ggdG8gZ2VuZXJhdGUgY29ycmVsYXRpb24gcGxvdHMgZm9yLlxcblxcblRoZXJlIGFyZSBubyBleHBsaWNpdCBvdXRwdXQgZGF0YXNldHMgY3JlYXRlZCB3aGljaCBhcmUgaW50ZW5kZWQgdG8gYmUgdXNlZCBmdXJ0aGVyIGluIHRoZSBmbG93LiAgSG93ZXZlciwgIHlvdSdsbCBub3RpY2UgdGhhdCB5b3VyIENBU1VTRVIgY2FzbGliIHdpbGwgbm93IGNvbnRhaW4gYSB0YWJsZSAoc3ludGhldGljX2RhdGFfY29ycl9wbG90KSAgd2hpY2ggaXMgYWxzbyBsb2FkZWQgdG8gbWVtb3J5LiAgWW91IG1heSBjaG9vc2UgdG8gdmlzdWFsaXplIHRoaXMgdXNpbmcgU0FTIFZpc3VhbCBBbmFseXRpY3MuXFxuXFxuQ3JlYXRlZCAvIGNvbnRhY3QgOiBCcmV0dCBXdWplayAoYnJldHQud3VqZWtAc2FzLmNvbSksICBSZXphIE5hemFyaSAocmV6YS5uYXphcmlAc2FzLmNvbSkgLCBSdWl3ZW4gWmhhbmcgKHJ1aXdlbi56aGFuZ0BzYXMuY29tKSBhbmQgU3VuZGFyZXNoIFNhbmthcmFuIChzdW5kYXJlc2guc2Fua2FyYW5Ac2FzLmNvbSkgXFxuXFxuVmVyc2lvbiA6IDEuMC4gICAoMDZPQ1QyMDIyKVwiLFwidHlwZVwiOlwidGV4dFwiLFwidmlzaWJsZVwiOlwiXCJ9XSxcImlkXCI6XCJwYWdlMlwiLFwibGFiZWxcIjpcIkFib3V0XCIsXCJ0eXBlXCI6XCJwYWdlXCJ9XSxcInNob3dQYWdlQ29udGVudE9ubHlcIjp0cnVlLFwic3ludGF4dmVyc2lvblwiOlwiMS4zLjBcIixcInZhbHVlc1wiOntcImNvbHVtbnNlbGVjdG9yMVwiOltdLFwiaW5wdXR0YWJsZTFcIjp7XCJsaWJyYXJ5XCI6XCJcIixcInRhYmxlXCI6XCJcIn0sXCJpbnB1dHRhYmxlMlwiOntcImxpYnJhcnlcIjpcIlwiLFwidGFibGVcIjpcIlwifX19IiwidGVtcGxhdGVzIjp7IlNBUyI6IlxuJWxldCBibGFua1NlcGFyYXRlZExpc3QgPSAlX2Zsd19nZXRfY29sdW1uX2xpc3QoX2Zsd19wcmVmaXg9Y29sdW1uc2VsZWN0b3IxKTtcbiVsZXQgY29tbWFTZXBhcmF0ZWRMaXN0ID0gJV9mbHdfZ2V0X2NvbHVtbl9saXN0KF9mbHdfcHJlZml4PWNvbHVtbnNlbGVjdG9yMSwgX2RlbGltPSVzdHIoLCkpO1xuXG5kYXRhIF9udWxsXztcblx0Y2FsbCBzeW1wdXQoXCJjb21tYVNlcGFyYXRlZExpc3RcIiwnXCInfHx0cmFud3JkKFwiXHUwMDI2Y29tbWFTZXBhcmF0ZWRMaXN0LlwiLFwiLFwiLCdcIixcIicpfHwnXCInKTtcbnJ1bjtcblxuJXB1dCBcdTAwMjZjb21tYVNlcGFyYXRlZExpc3QuO1xuXG5cbnByb2MgY2FzO1xuICAgc2ltcGxlLmNvcnJlbGF0aW9uIC9cbiAgICAgIGlucHV0cz17XHUwMDI2Y29tbWFTZXBhcmF0ZWRMaXN0Ln1cblx0ICBzaW1wbGU9dHJ1ZVxuICAgICAgdGFibGU9e25hbWUgPSBcIlx1MDAyNmlucHV0dGFibGUxX25hbWVfYmFzZS5cIiwgY2FzbGliPVwiXHUwMDI2aW5wdXR0YWJsZTFfbGliLlwifVxuXHQgIG91dFBlYXJzb249e25hbWU9XCJ0cmFpbl9jb3JyX291dDFcIiwgY2FzbGliPVwiQ0FTVVNFUlwiICxyZXBsYWNlPVwiVFJVRVwifTtcbnJ1bjtcblxuXG5wcm9jIGNhcztcbiAgIHNpbXBsZS5jb3JyZWxhdGlvbiAvXG4gICAgICBpbnB1dHM9e1x1MDAyNmNvbW1hU2VwYXJhdGVkTGlzdC59ICBcblx0ICBzaW1wbGU9dHJ1ZVxuICAgICAgdGFibGU9e25hbWUgPSBcIlx1MDAyNmlucHV0dGFibGUyX25hbWVfYmFzZS5cIiwgY2FzbGliPVwiXHUwMDI2aW5wdXR0YWJsZTJfbGliLlwifVxuXHQgIG91dFBlYXJzb249e25hbWU9XCJzeW50aF9jb3JyX291dDFcIiwgY2FzbGliPVwiQ0FTVVNFUlwiICxyZXBsYWNlPVwiVFJVRVwifTtcbnJ1bjtcblxuXG5kYXRhIENBU1VTRVIudHJhaW5fY29ycl9vdXQ7XG5zZXQgQ0FTVVNFUi50cmFpbl9jb3JyX291dDE7XG5cdGlmIF9OX1x1MDAzZTM7XG5cdGRyb3AgX1RZUEVfIDtcbnJ1bjtcblxuZGF0YSBDQVNVU0VSLnN5bnRoX2NvcnJfb3V0O1xuc2V0IENBU1VTRVIuc3ludGhfY29ycl9vdXQxO1xuXHRpZiBfTl9cdTAwM2UzO1xuXHRkcm9wIF9UWVBFXyA7XG5ydW47XG5cblxuICAvKiBwcmVwIGRhdGEgZm9yIGhlYXQgbWFwICovXG5kYXRhIENBU1VTRVIudHJhaW5fY29ycl9wbG90O1xuICBrZWVwIHggeSByO1xuICBzZXQgQ0FTVVNFUi50cmFpbl9jb3JyX291dDtcbiAgYXJyYXkgdnsqfSBfbnVtZXJpY187XG4gIHggPSBfTkFNRV87XG4gIGRvIGkgPSBkaW0odikgdG8gMSBieSAtMTtcbiAgICB5ID0gdm5hbWUodihpKSk7XG4gICAgciA9IHYoaSk7XG4gICAgLyogY3JlYXRlcyBhIGxvd2VyIHRyaWFuZ3VsYXIgbWF0cml4ICovXG4gICAgaWYgKGlcdTAwM2Nfbl8pIHRoZW5cbiAgICAgIHI9LjtcbiAgICBvdXRwdXQ7XG4gIGVuZDtcbnJ1bjtcblxuICAvKiBwcmVwIGRhdGEgZm9yIGhlYXQgbWFwICovXG5kYXRhIENBU1VTRVIuc3ludGhfY29ycl9wbG90O1xuICBrZWVwIHggeSByO1xuICBzZXQgQ0FTVVNFUi5zeW50aF9jb3JyX291dDtcbiAgYXJyYXkgdnsqfSBfbnVtZXJpY187XG4gIHggPSBfTkFNRV87XG4gIGRvIGkgPSBkaW0odikgdG8gMSBieSAtMTtcbiAgICB5ID0gdm5hbWUodihpKSk7XG4gICAgciA9IHYoaSk7XG4gICAgLyogY3JlYXRlcyBhIGxvd2VyIHRyaWFuZ3VsYXIgbWF0cml4ICovXG4gICAgaWYgKGlcdTAwM2Nfbl8pIHRoZW5cbiAgICAgIHI9LjtcbiAgICBvdXRwdXQ7XG4gIGVuZDtcbnJ1bjtcblxucHJvYyB0ZW1wbGF0ZTtcbiAgZGVmaW5lIHN0YXRncmFwaCBjb3JySGVhdG1hcDtcbiAgIGR5bmFtaWMgX1RpdGxlO1xuICAgIGJlZ2luZ3JhcGg7XG4gICAgICBlbnRyeXRpdGxlIF9UaXRsZTtcbiAgICAgIHJhbmdlYXR0cm1hcCBuYW1lPSdtYXAnO1xuICAgICAgLyogc2VsZWN0IGEgc2VyaWVzIG9mIGNvbG9ycyB0aGF0IHJlcHJlc2VudCBhIFwiZGl2ZXJnaW5nXCIgICovXG4gICAgICAvKiByYW5nZSBvZiB2YWx1ZXM6IHN0cm9uZ2VyIG9uIHRoZSBlbmRzLCB3ZWFrZXIgaW4gbWlkZGxlICovXG4gICAgICAvKiBHZXQgaWRlYXMgZnJvbSBodHRwOi8vY29sb3JicmV3ZXIub3JnICAgICAgICAgICAgICAgICAgICovXG4gICAgICByYW5nZSAtMSAtIDEgLyByYW5nZWNvbG9ybW9kZWw9KGN4RDhCMzY1IGN4RjVGNUY1IGN4NUFCNEFDKTtcbiAgICAgIGVuZHJhbmdlYXR0cm1hcDtcbiAgICAgIHJhbmdlYXR0cnZhciB2YXI9ciBhdHRydmFyPXIgYXR0cm1hcD0nbWFwJztcbiAgICAgIGxheW91dCBvdmVybGF5IC8gXG4gICAgICAgIHhheGlzb3B0cz0oZGlzcGxheT0obGluZSB0aWNrcyB0aWNrdmFsdWVzKSkgXG4gICAgICAgIHlheGlzb3B0cz0oZGlzcGxheT0obGluZSB0aWNrcyB0aWNrdmFsdWVzKSk7XG4gICAgICAgIGhlYXRtYXBwYXJtIHggPSB4IHkgPSB5IGNvbG9ycmVzcG9uc2UgPSByIC8gXG4gICAgICAgICAgeGJpbmF4aXM9ZmFsc2UgeWJpbmF4aXM9ZmFsc2VcbiAgICAgICAgICBuYW1lID0gXCJoZWF0bWFwXCIgZGlzcGxheT1hbGw7XG4gICAgICAgIGNvbnRpbnVvdXNsZWdlbmQgXCJoZWF0bWFwXCIgLyBcbiAgICAgICAgICBvcmllbnQgPSB2ZXJ0aWNhbCBsb2NhdGlvbiA9IG91dHNpZGUgdGl0bGU9XCJQZWFyc29uIENvcnJlbGF0aW9uXCI7XG4gICAgICBlbmRsYXlvdXQ7XG4gICAgZW5kZ3JhcGg7XG4gIGVuZDtcbnJ1bjtcblxuXG5wcm9jIHNncmVuZGVyIGRhdGE9Q0FTVVNFUi50cmFpbl9jb3JyX3Bsb3QgdGVtcGxhdGU9Y29yckhlYXRtYXA7XG4gICBkeW5hbWljIF90aXRsZT1cIkNvcnIgbWF0cml4IGZvciByZWFsIGRhdGFcIjtcbnJ1bjtcblxuXG5wcm9jIHNncmVuZGVyIGRhdGE9Q0FTVVNFUi5zeW50aF9jb3JyX3Bsb3QgdGVtcGxhdGU9Y29yckhlYXRtYXA7XG4gICBkeW5hbWljIF90aXRsZT1cIkNvcnIgbWF0cml4IGZvciBzeW50aGV0aWMgZGF0YVwiO1xucnVuO1xuXG5cbmRhdGEgQ0FTVVNFUi5zeW50aGV0aWNfZGF0YV9jb3JyX3Bsb3Q7XG5cdGxlbmd0aCBTeW50aGV0aWNfZGF0YV9mbGFnIHZhcmNoYXIoKik7XG5cdHNldCBDQVNVU0VSLnRyYWluX2NvcnJfcGxvdChpbj1hKSBDQVNVU0VSLnN5bnRoX2NvcnJfcGxvdChpbj1iKTtcblx0SWYgYiB0aGVuIFN5bnRoZXRpY19kYXRhX2ZsYWc9XCJHZW5lcmF0ZWQgRGF0YVwiOyBlbHNlIFN5bnRoZXRpY19kYXRhX2ZsYWc9XCJPcmlnaW5hbCBEYXRhXCI7XG5ydW47XG5cbnByb2MgY2FzO1xuXHR0YWJsZS5zYXZlIC8gXG5cdFxuXHRcdHRhYmxlPSB7bmFtZT1cInN5bnRoZXRpY19kYXRhX2NvcnJfcGxvdFwiLCBjYXNsaWI9XCJDQVNVU0VSXCJ9XG5cdFx0bmFtZT1cInN5bnRoZXRpY19kYXRhX2NvcnJfcGxvdFwiXG5cdFx0Y2FzbGliPVwiQ0FTVVNFUlwiXG5cdFx0cmVwbGFjZT1UcnVlXG5cdDtcblx0XG5cdHRhYmxlLnRhYmxlRXhpc3RzICByZXN1bHQ9cmMvXG5cdCAgIG5hbWU9XCJzeW50aGV0aWNfZGF0YV9jb3JyX3Bsb3RcIiwgY2FzbGliPVwiQ0FTVVNFUlwiXG5cdDtcblx0cHJpbnQgcmM7XG5cdFxuXHRkbyB1bnRpbCAocmMuZXhpc3RzPTApO1xuXHQgICB0YWJsZS5kcm9wVGFibGUgL1xuXHQgICAgICAgICBuYW1lPVwic3ludGhldGljX2RhdGFfY29ycl9wbG90XCJcblx0XHRcdCBjYXNsaWI9XCJDQVNVU0VSXCJcblx0ICAgICAgICAgO1xuXHQgICB0YWJsZS50YWJsZUV4aXN0cyAgcmVzdWx0PXJjL1xuXHRcdFx0bmFtZT1cInN5bnRoZXRpY19kYXRhX2NvcnJfcGxvdFwiXG5cdFx0XHRjYXNsaWI9XCJDQVNVU0VSXCJcblx0XHRcdDtcblx0cHJpbnQgcmM7XG5cdGVuZDtcblx0XG5cdDtcblx0XG5cdHRhYmxlLmxvYWRUYWJsZSAvXG5cdFx0cGF0aD1cInN5bnRoZXRpY19kYXRhX2NvcnJfcGxvdC5zYXNoZGF0XCJcblx0XHRjYXNsaWI9XCJDQVNVU0VSXCJcblx0XHRjYXNvdXQ9e25hbWU9XCJzeW50aGV0aWNfZGF0YV9jb3JyX3Bsb3RcIiwgY2FzbGliPVwiQ0FTVVNFUlwifVxuXHRcblx0O1xuXHRcblx0O1xuXHRcdHRhYmxlLnByb21vdGUgL1xuXHQgICAgICAgIG5hbWU9XCJzeW50aGV0aWNfZGF0YV9jb3JyX3Bsb3RcIlxuXHQgICAgICAgIGNhc2xpYj1cIkNBU1VTRVJcIlxuXHQgICAgICAgIGRyb3A9RkFMU0Vcblx0ICAgICAgICB0YXJnZXRjYXNsaWI9XCJDQVNVU0VSXCJcblx0ICAgIDtcblx0XG5xdWl0O1xuXG4ifX0=",
        "state": "enabled",
        "contentSourceLocation": "/Public/Custom Steps from Public GitHub",
        "connectors": [],
        "substitutions": {}
      },
      "connectors": [
        {
          "id": "02c1127b-8a3b-402e-9716-8b45b5d920d7",
          "uri": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991",
          "relatedUris": [
            "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e",
            "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690",
            "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f",
            "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1",
            "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407",
            "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab",
            "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a",
            "/files/files/cb511af9-58ca-4519-8db8-405986a36b57",
            "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24",
            "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03",
            "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0",
            "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe",
            "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443",
            "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a",
            "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736"
          ],
          "name": "Custom Steps from Public GitHub",
          "contentType": "application/vnd.sas.content.folder+json",
          "type": "parentFolder",
          "hints": {},
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "type": "application/vnd.sas.transfer.connector"
            }
          ],
          "forceMapping": false
        }
      ]
    },
    {
      "transferObject": {
        "links": [
          {
            "method": "GET",
            "rel": "self",
            "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/9de4d98d-ab22-4d55-aee0-1c2b858e2cf0",
            "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/9de4d98d-ab22-4d55-aee0-1c2b858e2cf0",
            "type": "application/vnd.sas.transfer.object"
          }
        ],
        "version": 2,
        "id": "9de4d98d-ab22-4d55-aee0-1c2b858e2cf0",
        "summary": {
          "creationTimeStamp": "2023-02-16T13:35:29.061Z",
          "modifiedTimeStamp": "2023-02-16T13:57:37.072Z",
          "createdBy": "arnold.t",
          "modifiedBy": "arnold.t",
          "id": "a0cdce70-b87b-4f39-b090-1520b3f3ea03",
          "type": "flowStep",
          "name": "Anonymize and Mask Data.step",
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03",
              "uri": "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03",
              "type": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "GET",
              "rel": "alternate",
              "href": "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03",
              "uri": "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03",
              "type": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "up",
              "href": "/dataFlows/steps",
              "uri": "/dataFlows/steps",
              "type": "application/vnd.sas.collection",
              "itemType": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "PUT",
              "rel": "update",
              "href": "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03",
              "uri": "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03",
              "type": "application/vnd.sas.data.flow.step",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "DELETE",
              "rel": "delete",
              "href": "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03",
              "uri": "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03"
            },
            {
              "method": "POST",
              "rel": "copy",
              "href": "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03/copy",
              "uri": "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03/copy",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "transferExport",
              "href": "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03",
              "uri": "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03",
              "responseType": "application/vnd.sas.transfer.object"
            },
            {
              "method": "PUT",
              "rel": "transferImportUpdate",
              "href": "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03",
              "uri": "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03",
              "type": "application/vnd.sas.transfer.object",
              "responseType": "application/vnd.sas.summary"
            }
          ],
          "version": 2
        },
        "content": "",
        "state": "enabled",
        "contentSourceLocation": "/Public/Custom Steps from Public GitHub",
        "connectors": [],
        "substitutions": {}
      },
      "connectors": [
        {
          "id": "02c1127b-8a3b-402e-9716-8b45b5d920d7",
          "uri": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991",
          "relatedUris": [
            "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e",
            "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690",
            "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f",
            "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1",
            "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407",
            "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab",
            "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a",
            "/files/files/cb511af9-58ca-4519-8db8-405986a36b57",
            "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24",
            "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03",
            "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0",
            "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe",
            "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443",
            "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a",
            "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736"
          ],
          "name": "Custom Steps from Public GitHub",
          "contentType": "application/vnd.sas.content.folder+json",
          "type": "parentFolder",
          "hints": {},
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "type": "application/vnd.sas.transfer.connector"
            }
          ],
          "forceMapping": false
        }
      ]
    },
    {
      "transferObject": {
        "links": [
          {
            "method": "GET",
            "rel": "self",
            "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/e05145dd-f452-4118-96dd-2518e3870b71",
            "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/e05145dd-f452-4118-96dd-2518e3870b71",
            "type": "application/vnd.sas.transfer.object"
          }
        ],
        "version": 2,
        "id": "e05145dd-f452-4118-96dd-2518e3870b71",
        "summary": {
          "creationTimeStamp": "2022-12-07T17:19:47.752Z",
          "modifiedTimeStamp": "2022-12-07T17:19:47.752Z",
          "createdBy": "arnold.t",
          "modifiedBy": "arnold.t",
          "id": "cb511af9-58ca-4519-8db8-405986a36b57",
          "type": "application/vnd.sas.file+json",
          "name": "getting Custom Steps from SAS GitLab and Public GitHub.docx",
          "description": "",
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/files/files/cb511af9-58ca-4519-8db8-405986a36b57",
              "uri": "/files/files/cb511af9-58ca-4519-8db8-405986a36b57",
              "type": "application/vnd.sas.file"
            },
            {
              "method": "GET",
              "rel": "alternate",
              "href": "/files/files/cb511af9-58ca-4519-8db8-405986a36b57",
              "uri": "/files/files/cb511af9-58ca-4519-8db8-405986a36b57",
              "type": "application/vnd.sas.summary"
            },
            {
              "method": "PATCH",
              "rel": "patch",
              "href": "/files/files/cb511af9-58ca-4519-8db8-405986a36b57",
              "uri": "/files/files/cb511af9-58ca-4519-8db8-405986a36b57",
              "type": "application/vnd.sas.file",
              "responseType": "application/vnd.sas.file"
            },
            {
              "method": "PUT",
              "rel": "update",
              "href": "/files/files/cb511af9-58ca-4519-8db8-405986a36b57",
              "uri": "/files/files/cb511af9-58ca-4519-8db8-405986a36b57",
              "type": "application/vnd.sas.file",
              "responseType": "application/vnd.sas.file"
            },
            {
              "method": "DELETE",
              "rel": "delete",
              "href": "/files/files/cb511af9-58ca-4519-8db8-405986a36b57",
              "uri": "/files/files/cb511af9-58ca-4519-8db8-405986a36b57"
            },
            {
              "method": "GET",
              "rel": "content",
              "href": "/files/files/cb511af9-58ca-4519-8db8-405986a36b57/content",
              "uri": "/files/files/cb511af9-58ca-4519-8db8-405986a36b57/content",
              "type": "application/octet-stream"
            },
            {
              "method": "PUT",
              "rel": "updateContent",
              "href": "/files/files/cb511af9-58ca-4519-8db8-405986a36b57/content",
              "uri": "/files/files/cb511af9-58ca-4519-8db8-405986a36b57/content",
              "type": "*/*",
              "responseType": "application/vnd.sas.file"
            },
            {
              "method": "POST",
              "rel": "copyFile",
              "href": "/files/files/cb511af9-58ca-4519-8db8-405986a36b57/copy",
              "uri": "/files/files/cb511af9-58ca-4519-8db8-405986a36b57/copy",
              "responseType": "application/vnd.sas.file"
            },
            {
              "method": "POST",
              "rel": "create",
              "href": "/files/files",
              "uri": "/files/files",
              "type": "*/*",
              "responseType": "application/vnd.sas.file"
            }
          ],
          "version": 2
        },
        "content": "",
        "state": "enabled",
        "contentSourceLocation": "/Public/Custom Steps from Public GitHub",
        "connectors": [],
        "substitutions": {}
      },
      "connectors": [
        {
          "id": "02c1127b-8a3b-402e-9716-8b45b5d920d7",
          "uri": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991",
          "relatedUris": [
            "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e",
            "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690",
            "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f",
            "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1",
            "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407",
            "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab",
            "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a",
            "/files/files/cb511af9-58ca-4519-8db8-405986a36b57",
            "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24",
            "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03",
            "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0",
            "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe",
            "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443",
            "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a",
            "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736"
          ],
          "name": "Custom Steps from Public GitHub",
          "contentType": "application/vnd.sas.content.folder+json",
          "type": "parentFolder",
          "hints": {},
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "type": "application/vnd.sas.transfer.connector"
            }
          ],
          "forceMapping": false
        }
      ]
    },
    {
      "transferObject": {
        "links": [
          {
            "method": "GET",
            "rel": "self",
            "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/042251b9-d3b8-4bca-a961-244e173246f6",
            "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/042251b9-d3b8-4bca-a961-244e173246f6",
            "type": "application/vnd.sas.transfer.object"
          }
        ],
        "version": 2,
        "id": "042251b9-d3b8-4bca-a961-244e173246f6",
        "summary": {
          "creationTimeStamp": "2022-12-05T04:08:37.841Z",
          "modifiedTimeStamp": "2022-12-07T15:56:56.098Z",
          "createdBy": "arnold.t",
          "modifiedBy": "arnold.t",
          "id": "f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a",
          "type": "flowStep",
          "name": "DQ - Clustering.step",
          "description": "PROC DQMATCH:\nCreate match-codes as a basis for standardization or transformation.\n",
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a",
              "uri": "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a",
              "type": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "GET",
              "rel": "alternate",
              "href": "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a",
              "uri": "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a",
              "type": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "up",
              "href": "/dataFlows/steps",
              "uri": "/dataFlows/steps",
              "type": "application/vnd.sas.collection",
              "itemType": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "PUT",
              "rel": "update",
              "href": "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a",
              "uri": "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a",
              "type": "application/vnd.sas.data.flow.step",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "DELETE",
              "rel": "delete",
              "href": "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a",
              "uri": "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a"
            },
            {
              "method": "POST",
              "rel": "copy",
              "href": "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a/copy",
              "uri": "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a/copy",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "transferExport",
              "href": "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a",
              "uri": "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a",
              "responseType": "application/vnd.sas.transfer.object"
            },
            {
              "method": "PUT",
              "rel": "transferImportUpdate",
              "href": "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a",
              "uri": "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a",
              "type": "application/vnd.sas.transfer.object",
              "responseType": "application/vnd.sas.summary"
            }
          ],
          "version": 2
        },
        "content": "",
        "state": "enabled",
        "contentSourceLocation": "/Public/Custom Steps from Public GitHub",
        "connectors": [],
        "substitutions": {}
      },
      "connectors": [
        {
          "id": "02c1127b-8a3b-402e-9716-8b45b5d920d7",
          "uri": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991",
          "relatedUris": [
            "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e",
            "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690",
            "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f",
            "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1",
            "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407",
            "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab",
            "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a",
            "/files/files/cb511af9-58ca-4519-8db8-405986a36b57",
            "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24",
            "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03",
            "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0",
            "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe",
            "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443",
            "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a",
            "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736"
          ],
          "name": "Custom Steps from Public GitHub",
          "contentType": "application/vnd.sas.content.folder+json",
          "type": "parentFolder",
          "hints": {},
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "type": "application/vnd.sas.transfer.connector"
            }
          ],
          "forceMapping": false
        }
      ]
    },
    {
      "transferObject": {
        "links": [
          {
            "method": "GET",
            "rel": "self",
            "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/3b324c62-37a1-4e0f-9f0a-480d3a7a1607",
            "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/3b324c62-37a1-4e0f-9f0a-480d3a7a1607",
            "type": "application/vnd.sas.transfer.object"
          }
        ],
        "version": 2,
        "id": "3b324c62-37a1-4e0f-9f0a-480d3a7a1607",
        "summary": {
          "creationTimeStamp": "2022-12-04T18:22:47.338Z",
          "modifiedTimeStamp": "2022-12-07T16:05:15.464Z",
          "createdBy": "arnold.t",
          "modifiedBy": "arnold.t",
          "id": "c4df80f4-f5da-427d-807d-747a10ca105e",
          "type": "flowStep",
          "name": "DQ - Standardize.step",
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e",
              "uri": "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e",
              "type": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "GET",
              "rel": "alternate",
              "href": "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e",
              "uri": "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e",
              "type": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "up",
              "href": "/dataFlows/steps",
              "uri": "/dataFlows/steps",
              "type": "application/vnd.sas.collection",
              "itemType": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "PUT",
              "rel": "update",
              "href": "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e",
              "uri": "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e",
              "type": "application/vnd.sas.data.flow.step",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "DELETE",
              "rel": "delete",
              "href": "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e",
              "uri": "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e"
            },
            {
              "method": "POST",
              "rel": "copy",
              "href": "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e/copy",
              "uri": "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e/copy",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "transferExport",
              "href": "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e",
              "uri": "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e",
              "responseType": "application/vnd.sas.transfer.object"
            },
            {
              "method": "PUT",
              "rel": "transferImportUpdate",
              "href": "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e",
              "uri": "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e",
              "type": "application/vnd.sas.transfer.object",
              "responseType": "application/vnd.sas.summary"
            }
          ],
          "version": 2
        },
        "content": "",
        "state": "enabled",
        "contentSourceLocation": "/Public/Custom Steps from Public GitHub",
        "connectors": [],
        "substitutions": {}
      },
      "connectors": [
        {
          "id": "02c1127b-8a3b-402e-9716-8b45b5d920d7",
          "uri": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991",
          "relatedUris": [
            "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e",
            "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690",
            "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f",
            "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1",
            "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407",
            "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab",
            "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a",
            "/files/files/cb511af9-58ca-4519-8db8-405986a36b57",
            "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24",
            "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03",
            "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0",
            "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe",
            "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443",
            "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a",
            "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736"
          ],
          "name": "Custom Steps from Public GitHub",
          "contentType": "application/vnd.sas.content.folder+json",
          "type": "parentFolder",
          "hints": {},
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "type": "application/vnd.sas.transfer.connector"
            }
          ],
          "forceMapping": false
        }
      ]
    },
    {
      "transferObject": {
        "links": [
          {
            "method": "GET",
            "rel": "self",
            "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/f5c0b701-61f1-4519-9d6d-e04babfcd958",
            "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/f5c0b701-61f1-4519-9d6d-e04babfcd958",
            "type": "application/vnd.sas.transfer.object"
          }
        ],
        "version": 2,
        "id": "f5c0b701-61f1-4519-9d6d-e04babfcd958",
        "summary": {
          "creationTimeStamp": "2022-11-23T03:20:12.629Z",
          "modifiedTimeStamp": "2023-11-28T22:18:21.510Z",
          "createdBy": "arnold.t",
          "modifiedBy": "arnold.t",
          "id": "e118ab7e-0c2e-419b-8f6a-05c551a38736",
          "type": "flowStep",
          "name": "DQ - Identify.step",
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736",
              "uri": "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736",
              "type": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "GET",
              "rel": "alternate",
              "href": "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736",
              "uri": "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736",
              "type": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "up",
              "href": "/dataFlows/steps",
              "uri": "/dataFlows/steps",
              "type": "application/vnd.sas.collection",
              "itemType": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "PUT",
              "rel": "update",
              "href": "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736",
              "uri": "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736",
              "type": "application/vnd.sas.data.flow.step",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "DELETE",
              "rel": "delete",
              "href": "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736",
              "uri": "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736"
            },
            {
              "method": "POST",
              "rel": "copy",
              "href": "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736/copy",
              "uri": "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736/copy",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "transferExport",
              "href": "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736",
              "uri": "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736",
              "responseType": "application/vnd.sas.transfer.object"
            },
            {
              "method": "PUT",
              "rel": "transferImportUpdate",
              "href": "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736",
              "uri": "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736",
              "type": "application/vnd.sas.transfer.object",
              "responseType": "application/vnd.sas.summary"
            }
          ],
          "version": 2
        },
        "content": "",
        "state": "enabled",
        "contentSourceLocation": "/Public/Custom Steps from Public GitHub",
        "connectors": [],
        "substitutions": {}
      },
      "connectors": [
        {
          "id": "02c1127b-8a3b-402e-9716-8b45b5d920d7",
          "uri": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991",
          "relatedUris": [
            "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e",
            "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690",
            "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f",
            "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1",
            "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407",
            "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab",
            "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a",
            "/files/files/cb511af9-58ca-4519-8db8-405986a36b57",
            "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24",
            "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03",
            "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0",
            "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe",
            "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443",
            "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a",
            "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736"
          ],
          "name": "Custom Steps from Public GitHub",
          "contentType": "application/vnd.sas.content.folder+json",
          "type": "parentFolder",
          "hints": {},
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "type": "application/vnd.sas.transfer.connector"
            }
          ],
          "forceMapping": false
        }
      ]
    },
    {
      "transferObject": {
        "links": [
          {
            "method": "GET",
            "rel": "self",
            "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/8efda367-d837-4c31-b958-3264dbb9c15d",
            "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/8efda367-d837-4c31-b958-3264dbb9c15d",
            "type": "application/vnd.sas.transfer.object"
          }
        ],
        "version": 2,
        "id": "8efda367-d837-4c31-b958-3264dbb9c15d",
        "summary": {
          "creationTimeStamp": "2022-11-17T20:29:56.191Z",
          "modifiedTimeStamp": "2022-11-23T03:04:55.112Z",
          "createdBy": "arnold.t",
          "modifiedBy": "arnold.t",
          "id": "d34f3c99-e875-455c-9328-55e749da0443",
          "type": "flowStep",
          "name": "DQ - Match Code.step",
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443",
              "uri": "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443",
              "type": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "GET",
              "rel": "alternate",
              "href": "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443",
              "uri": "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443",
              "type": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "up",
              "href": "/dataFlows/steps",
              "uri": "/dataFlows/steps",
              "type": "application/vnd.sas.collection",
              "itemType": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "PUT",
              "rel": "update",
              "href": "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443",
              "uri": "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443",
              "type": "application/vnd.sas.data.flow.step",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "DELETE",
              "rel": "delete",
              "href": "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443",
              "uri": "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443"
            },
            {
              "method": "POST",
              "rel": "copy",
              "href": "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443/copy",
              "uri": "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443/copy",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "transferExport",
              "href": "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443",
              "uri": "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443",
              "responseType": "application/vnd.sas.transfer.object"
            },
            {
              "method": "PUT",
              "rel": "transferImportUpdate",
              "href": "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443",
              "uri": "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443",
              "type": "application/vnd.sas.transfer.object",
              "responseType": "application/vnd.sas.summary"
            }
          ],
          "version": 2
        },
        "content": "",
        "state": "enabled",
        "contentSourceLocation": "/Public/Custom Steps from Public GitHub",
        "connectors": [],
        "substitutions": {}
      },
      "connectors": [
        {
          "id": "02c1127b-8a3b-402e-9716-8b45b5d920d7",
          "uri": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991",
          "relatedUris": [
            "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e",
            "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690",
            "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f",
            "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1",
            "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407",
            "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab",
            "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a",
            "/files/files/cb511af9-58ca-4519-8db8-405986a36b57",
            "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24",
            "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03",
            "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0",
            "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe",
            "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443",
            "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a",
            "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736"
          ],
          "name": "Custom Steps from Public GitHub",
          "contentType": "application/vnd.sas.content.folder+json",
          "type": "parentFolder",
          "hints": {},
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "type": "application/vnd.sas.transfer.connector"
            }
          ],
          "forceMapping": false
        }
      ]
    },
    {
      "transferObject": {
        "links": [
          {
            "method": "GET",
            "rel": "self",
            "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/a9db1a58-d6d1-4bbe-b25a-d48f9990048b",
            "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/objects/a9db1a58-d6d1-4bbe-b25a-d48f9990048b",
            "type": "application/vnd.sas.transfer.object"
          }
        ],
        "version": 2,
        "id": "a9db1a58-d6d1-4bbe-b25a-d48f9990048b",
        "summary": {
          "creationTimeStamp": "2022-11-16T22:35:57.165Z",
          "modifiedTimeStamp": "2023-03-22T18:23:07.775Z",
          "createdBy": "arnold.t",
          "modifiedBy": "dan.f",
          "id": "8fea365a-a4e6-4bf3-8def-44442e97aa24",
          "type": "flowStep",
          "name": "DQ - Surviving Record.step",
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24",
              "uri": "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24",
              "type": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "GET",
              "rel": "alternate",
              "href": "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24",
              "uri": "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24",
              "type": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "up",
              "href": "/dataFlows/steps",
              "uri": "/dataFlows/steps",
              "type": "application/vnd.sas.collection",
              "itemType": "application/vnd.sas.data.flow.step.summary"
            },
            {
              "method": "PUT",
              "rel": "update",
              "href": "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24",
              "uri": "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24",
              "type": "application/vnd.sas.data.flow.step",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "DELETE",
              "rel": "delete",
              "href": "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24",
              "uri": "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24"
            },
            {
              "method": "POST",
              "rel": "copy",
              "href": "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24/copy",
              "uri": "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24/copy",
              "responseType": "application/vnd.sas.data.flow.step"
            },
            {
              "method": "GET",
              "rel": "transferExport",
              "href": "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24",
              "uri": "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24",
              "responseType": "application/vnd.sas.transfer.object"
            },
            {
              "method": "PUT",
              "rel": "transferImportUpdate",
              "href": "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24",
              "uri": "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24",
              "type": "application/vnd.sas.transfer.object",
              "responseType": "application/vnd.sas.summary"
            }
          ],
          "version": 2
        },
        "content": "",
        "state": "enabled",
        "contentSourceLocation": "/Public/Custom Steps from Public GitHub",
        "connectors": [],
        "substitutions": {}
      },
      "connectors": [
        {
          "id": "02c1127b-8a3b-402e-9716-8b45b5d920d7",
          "uri": "/folders/folders/3763ec22-042d-4e77-889c-739a0c38c991",
          "relatedUris": [
            "/dataFlows/steps/c4df80f4-f5da-427d-807d-747a10ca105e",
            "/dataFlows/steps/4f344467-1e79-475c-80a3-3ef34690f690",
            "/dataFlows/steps/449a664b-3b3a-4c48-a5ec-8b590266da1f",
            "/dataFlows/steps/1980dec5-18c9-4175-9173-b69e3b96bda1",
            "/dataFlows/steps/1db95532-9991-429b-aaab-8b562b969407",
            "/dataFlows/steps/32df8157-716a-48f1-b9db-c12a47fbf1ab",
            "/dataFlows/steps/12f4871a-66b6-49c7-8434-b2860b817f7a",
            "/files/files/cb511af9-58ca-4519-8db8-405986a36b57",
            "/dataFlows/steps/8fea365a-a4e6-4bf3-8def-44442e97aa24",
            "/dataFlows/steps/a0cdce70-b87b-4f39-b090-1520b3f3ea03",
            "/dataFlows/steps/d45ddc20-d8a2-489b-ba30-ee7530aa53d0",
            "/dataFlows/steps/d92babf7-51d0-4257-9a74-74e29a3d39fe",
            "/dataFlows/steps/d34f3c99-e875-455c-9328-55e749da0443",
            "/dataFlows/steps/f98cdf16-02a0-4aaf-8ee5-3efa97a3ed1a",
            "/dataFlows/steps/e118ab7e-0c2e-419b-8f6a-05c551a38736"
          ],
          "name": "Custom Steps from Public GitHub",
          "contentType": "application/vnd.sas.content.folder+json",
          "type": "parentFolder",
          "hints": {},
          "links": [
            {
              "method": "GET",
              "rel": "self",
              "href": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "uri": "/transfer/packages/3c77a2e2-1c79-4d0d-ba84-ea384da1c2b6/connectors/02c1127b-8a3b-402e-9716-8b45b5d920d7",
              "type": "application/vnd.sas.transfer.connector"
            }
          ],
          "forceMapping": false
        }
      ]
    }
  ]
}